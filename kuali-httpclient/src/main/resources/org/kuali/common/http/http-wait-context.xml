<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2014-2014 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

  <!--
    The only required property is ${http.url}.
    The other timeout related properties have sensible defaults.
    Default behavior is to repeatedly poll the url for 15 minutes until we get a valid http status code.
    If an IO exception is encountered the logic backs off, waits 5 seconds, then tries again.
    If status code 503 (temporarily unavailable) is returned, the logic backs off, waits 5 seconds, then tries again.
    Any status code other than 503 causes the logic to quit polling and return.
    The returned object (HttpWaitResult) contains a HttpStatus object.
    HttpStatus indicates one of SUCCESS, INVALID_HTTP_STATUS_CODE, TIMEOUT, IO_EXCEPTION
    Anything other than SUCCESS indicates something went wrong (timeout, 404, etc) and results in IllegalStateException being thrown
  -->

  <!-- Hard timeout (Default is 15 minutes) -->
  <bean id="http.overallTimeoutMillis" class="org.kuali.common.util.spring.GetMillisFactoryBean">
    <property name="time" value="${http.overallTimeout:15m}" />
  </bean>

  <!-- Amount of time for the HttpRequest to complete (Default is 5 seconds) -->
  <bean id="http.requestTimeoutMillis" class="org.kuali.common.util.spring.GetMillisFactoryBean">
    <property name="time" value="${http.requestTimeout:5s}" />
  </bean>

  <!-- Amount of time to wait before polling the URL again (Default is 5 seconds) -->
  <bean id="http.sleepIntervalMillis" class="org.kuali.common.util.spring.GetMillisFactoryBean">
    <property name="time" value="${http.sleepInterval:5s}" />
  </bean>

  <!-- Provide some context for the executable -->
  <bean id="http.context" class="org.kuali.common.http.HttpContext">
    <property name="url" value="${http.url}" />
    <property name="overallTimeoutMillis" ref="http.overallTimeoutMillis" />
    <property name="requestTimeoutMillis" ref="http.requestTimeoutMillis" />
    <property name="sleepIntervalMillis" ref="http.sleepIntervalMillis" />
  </bean>

  <!-- Invoke the service and wait for the url to respond with http status code "200" -->
  <bean id="http.waitExecutable" class="org.kuali.common.http.HttpWaitExecutable" init-method="execute">
    <property name="context" ref="http.context" />
    <property name="skip" value="${http.wait.skip:FALSE}" />
  </bean>

</beans>