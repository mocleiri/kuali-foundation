Monday
------
- Continued work on bringing up testci
- Quite a bit of back and forth with Mike Wyers related to KS AFT's
- Confirmed Ruby setup was going to work ok
- Got consensus on adding a command line switch to the Ruby code that controls which version of Firefox gets used
- 3 different versions of firefox installed now, only thing that works is 2 threads hitting firefox14 (just like ci.rice)
- 4 threads and/or a different version of firefox, kinda/sorta works, but produces different results than ci.rice
- modified some code posted to stackoverflow related to using curl for interacting with S3
- now have an exceedingly simple, high speed, method for uploading files from an EC2 instance to S3 
- (only had non-authenticated download before this)

Tuesday
-------
- continued work on improving testci setup/configuration/flexibility
- added logic to extract and automatically sync a backup of all configuration (including config-history and build history) to S3 each night
- the size of that backup is too large to continue checking into Subversion like what is being done for the seed configuration
- enhanced scripting to allow authenticated download of resources from S3 so large files no longer have to be encrypted with GPG when being uploaded in order to protect them
- s3get / s3put
- saves time both ways (upload and download)
- weekly meeting with Jessica

Wednesday
---------
- added m2s3get and m2s3put to simplify storing private maven based resources in S3
- coordinated with KS on new CI details
-- timing related to next release of LTS ubuntu (15 days from today)
-- subversion 1.6 clients and how/when we'll move to 1.7
-- extended discussion on overall CI setup
-- test job Haroon added completed in 1/2 the time that it takes on current CI 


Thursday
--------
- Rice 
-- Call with Jessica - tar.gz, coordinate on email from OLE related to release
- continued work on improving testci setup/configuration/flexibility

Friday
------
- added min/thin/full modes to automated CI S3 synchronization routines
- added support for these modes to the install scripts
- added service method to EC2Service allowing an AMI created in one region to be copied to another region
- improved build slave AMI creation process to take advantage of AMI copying
- the slave AMI automatically copies the new AMI into all 3 US regions each time it gets created
- since the input to the Jenkins EC2 Plugin is an AMI id, this allows the service to be quickly changed to run from any of the 3 US regions  
 