SRC=https://svn.kuali.org/repos/foundation/branches/impex-2.0
DST=https://svn.kuali.org/repos/foundation/sandbox/branches/impex-2.0-embedded
MSG="Modularize Impex so it could be realistically embedded in an app"

svn rm -m '$MSG' $DST
svn cp -m '$MSG' $SRC $DST --parents
svn cp -m '$MSG' $DST/torque-generator $DST/torque-parser
svn rm -m '$MSG' $DST/torque-parser/src/main/java/org $DST/torque-parser/src/main/resources/org $DST/torque-parser/src/test/resources/org $DST/torque-parser/src/test/java/org
 
 
DEVOPS-20
 - symbolic links appear to get nuked by untar then rezip
 - should be fine, just a little less compact because you end up with duplicate copies of the items that were symbolically linked
 - Run new Ant script on jdk7 21, md5 against already published jdk21
 - Use Ant tar targets if possible
 - jre/lib/amd64/server/libjsig.so -> ../libjsig.so
 
DEVOPS-21
 - binaries with no checksums
 - expand to all repos
 - war, zip
 



- no checksum verification on the zip file, but diff -r -q on the exploded directory structure showed no differences 
- upload zip files manually into Kuali Nexus Hosted Private
- make sure the resulting zip files are formatted the same way as the examples that are already up there


              AMI: ami-65792c0c
         Key Pair: kuali-key
Availability Zone: us-east-1d

amzn-ami-minimal-pv-2013.09.0.x86_64-ebs - ami-65792c0c
Amazon Linux AMI x86_64 MINIMAL EBS

http://aws.amazon.com/amazon-linux-ami/
ami-35792c5c

echo $(date)
df -h
fdisk -l
resize2fs /dev/xvda1
df -h
echo $(date)



src/main/java/org/kuali/common/util/CheckSumUtils.java:	private static final String UTF8 = "UTF-8";
src/main/java/org/kuali/common/util/config/Location.java:	public static final String DEFAULT_ENCODING = "UTF-8";
src/main/java/org/kuali/common/util/execute/StorePropertiesExecutable.java:	String encoding = "UTF-8";
src/main/java/org/kuali/common/util/LocationPropertiesContext.java:	String encoding = "UTF-8";
src/main/java/org/kuali/common/util/log/log4j/DefaultLog4JService.java:	private static final String ENCODING = "UTF-8";
src/main/java/org/kuali/common/util/log4j/DefaultLog4JService.java:	protected static final String ENCODING = "UTF-8";
src/main/java/org/kuali/common/util/MetaInfUtils.java:		PropertyUtils.store(properties, propertiesFile, "UTF-8");
src/main/java/org/kuali/common/util/property/Constants.java:	public static final String UTF8 = "UTF-8";
src/main/java/org/kuali/common/util/property/DefaultPropertyLoadContext.java:	String encoding = "UTF-8";
src/main/java/org/kuali/common/util/PropertyUtils.java:	private static final String DEFAULT_XML_ENCODING = "UTF-8";
src/main/java/org/kuali/common/util/secure/channel/DefaultSecureChannel.java:		private String encoding = "UTF-8";
src/main/java/org/kuali/common/util/secure/DefaultSecureChannel.java:	private static final String DEFAULT_ENCODING = "UTF-8";
src/main/java/org/kuali/common/util/Str.java:	public static final String UTF8 = "UTF-8";
