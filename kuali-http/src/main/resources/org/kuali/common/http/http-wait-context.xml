<?xml version="1.0" encoding="UTF-8"?>
<!--

  Copyright 2004-2013 The Kuali Foundation

  Licensed under the Educational Community License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.opensource.org/licenses/ecl2.php

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

  <!--
    The only required property is ${http.url}.
    The other timeout related properties have sensible defaults.
    Default behavior is to repeatedly poll the url for up to 15 minutes to get a valid http status code.
    If an IO exception is encountered the logic will back off, wait 5 seconds, then try again.
    If status code 503 (temporarily unavailable) is returned, the logic will back off, wait 5 seconds, then try again.
    If any status code other than 503 is returned, the logic quits polling the url and returns an HttpWaitResult object
    The HttpWaitResult object contains a ResultStatus object which can be inspected to see if polling the url
    resulted in SUCCESS (ie status code 200).
    Anything other than SUCCESS indicates something went wrong (timeout, 404, etc) and results in IllegalStateException being thrown
  -->

  <bean id="http.overallTimeoutMillis" class="org.kuali.common.util.spring.GetMillisFactoryBean">
    <property name="time" value="${http.overallTimeout:15m}" />
  </bean>

  <bean id="http.requestTimeoutMillis" class="org.kuali.common.util.spring.GetMillisFactoryBean">
    <property name="time" value="${http.requestTimeout:5s}" />
  </bean>

  <bean id="http.sleepIntervalMillis" class="org.kuali.common.util.spring.GetMillisFactoryBean">
    <property name="time" value="${http.sleepInterval:5s}" />
  </bean>

  <bean id="http.context" class="org.kuali.common.http.HttpContext">
    <property name="url" value="${http.url}" />
    <property name="overallTimeoutMillis" ref="http.overallTimeoutMillis" />
    <property name="requestTimeoutMillis" ref="http.requestTimeoutMillis" />
    <property name="sleepIntervalMillis" ref="http.sleepIntervalMillis" />
  </bean>

  <bean id="http.waitExecutable" class="org.kuali.common.http.HttpWaitExecutable" init-method="execute">
    <property name="context" ref="http.context" />
  </bean>

</beans>