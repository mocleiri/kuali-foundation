<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010-2013 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
  <comment>Oracle SQL</comment>
  <!--
    Drop a user ignoring Oracle's "user does not exist" error
    This SQL fails if there are any active connections for the user
  -->
  <entry key="oracle.drop">
    BEGIN EXECUTE IMMEDIATE 'DROP USER ${sql.username} CASCADE'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -01918 THEN RAISE; END IF; END;
    /
  </entry>
  <!-- Kill any active sessions for the indicated user before dropping them -->
  <entry key="oracle.killAndDrop">
    BEGIN
    FOR sessions IN (SELECT sid, serial# FROM v$session WHERE username = '${sql.username}')
    LOOP
    EXECUTE IMMEDIATE 'ALTER SYSTEM KILL SESSION '''||SESSIONS.SID||','||SESSIONS.SERIAL#||'''';
    END LOOP;
    EXECUTE IMMEDIATE 'DROP user ${sql.username} CASCADE'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -01918 THEN RAISE; END IF; END;
    /
  </entry>
  <!--
    Kill any active sessions for the indicated user before dropping them.
    The Amazon RDS service does not directly allow the killing of active sessions the normal Oracle way.
    Killing active sessions can only be done by running the rdsadmin.rdsadmin_util.kill() function they provide.
    The reason Amazon prohibits certain DBA activities is so they can successfully provide a managed database service.
  -->
  <entry key="oracle.killAndDrop.rds">
    BEGIN
    FOR sessions IN (SELECT sid, serial# FROM v$session WHERE username = '${sql.username}')
    LOOP
    rdsadmin.rdsadmin_util.kill(sessions.sid,sessions.serial#);
    END LOOP;
    EXECUTE IMMEDIATE 'DROP user ${sql.username} CASCADE'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -01918 THEN RAISE; END IF; END;
    /
  </entry>
  <entry key="oracle.create">
    CREATE USER ${sql.username} IDENTIFIED BY ${sql.password} DEFAULT TABLESPACE ${oracle.tablespace.default} TEMPORARY TABLESPACE ${oracle.tablespace.temp} QUOTA ${oracle.tablespace.default.quota} ON ${oracle.tablespace.default}
    /
    GRANT CREATE PROCEDURE, CREATE SEQUENCE, CREATE SESSION, CREATE SYNONYM, CREATE TABLE, CREATE TRIGGER, CREATE TYPE, CREATE VIEW TO ${sql.username}
    /
  </entry>
  <entry key="oracle.tablespace.temp">temp</entry>
  <entry key="oracle.tablespace.default">users</entry>
  <entry key="oracle.tablespace.default.quota">UNLIMITED</entry>
  <entry key="oracle.validate">
    SELECT SYSDATE FROM DUAL
    /
  </entry>
  <entry key="oracle.schemaStats">
    BEGIN
    DBMS_STATS.GATHER_SCHEMA_STATS(ownname=>'${sql.username}', granularity=>'ALL', CASCADE=>TRUE, estimate_percent=>100, DEGREE=>2, method_opt=>'for all columns size auto');
    END;
    /
  </entry>
  <!-- SQL to drop/create the 2 tables Liquibase needs in order to acquire a "lock" and go about its business -->
  <entry key="oracle.liquibase.drop">
    BEGIN EXECUTE IMMEDIATE 'DROP TABLE DATABASECHANGELOG'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -00942 THEN RAISE; END IF; END;
    /
    BEGIN EXECUTE IMMEDIATE 'DROP TABLE DATABASECHANGELOGLOCK'; EXCEPTION WHEN OTHERS THEN IF SQLCODE != -00942 THEN RAISE; END IF; END;
    /
  </entry>
  <entry key="oracle.liquibase.create">
    CREATE TABLE DATABASECHANGELOG (ID VARCHAR(63) NOT NULL
    , AUTHOR VARCHAR(63)
    , FILENAME VARCHAR(255)
    , DATEEXECUTED TIMESTAMP NOT NULL
    , ORDEREXECUTED DECIMAL(22,0) NOT NULL
    , EXECTYPE VARCHAR(10) NOT NULL
    , MD5SUM VARCHAR(35)
    , DESCRIPTION VARCHAR(255)
    , COMMENTS VARCHAR(255)
    , TAG VARCHAR(255)
    , LIQUIBASE VARCHAR(20)
    , CONSTRAINT DATABASECHANGELOG_PK PRIMARY KEY(ID,AUTHOR,FILENAME)
    )
    /
    CREATE TABLE DATABASECHANGELOGLOCK (ID DECIMAL(22,0) NOT NULL
    , LOCKED DECIMAL(1,0) NOT NULL
    , LOCKGRANTED TIMESTAMP
    , LOCKEDBY VARCHAR(255)
    , CONSTRAINT DATABASECHANGELOGLOCK_PK PRIMARY KEY(ID)
    )
    /
  </entry>
</properties>