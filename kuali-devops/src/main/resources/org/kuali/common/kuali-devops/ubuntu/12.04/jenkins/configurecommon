#!/bin/bash
#
# Copyright 2004-2014 The Kuali Foundation
#
# Licensed under the Educational Community License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.opensource.org/licenses/ecl2.php
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

function install_maven {

  VERSION=$1
  ABBR=$2
  
  GROUP_ID=org.apache.maven
  ARTIFACT_ID=apache-maven
  CLASSIFIER=bin
  TYPE=zip
  REPO=http://search.maven.org/remotecontent?filepath=
  
  echo "install   -> maven $VERSION"

  $MY_DIR/../common/m2download $QUIET_FLAG $REPO $GROUP_ID $ARTIFACT_ID $VERSION --classifier=$CLASSIFIER --type=$TYPE
  LOCAL_MAVEN_ZIP_FILE=$($MY_DIR/../common/m2path $GROUP_ID $ARTIFACT_ID $VERSION --classifier=$CLASSIFIER --type=$TYPE)

  MAVEN_DIR=$MAVEN_BASEDIR/$ARTIFACT_ID-$VERSION
  MAVEN_TARGET=$MAVEN_BASEDIR/mvn$MAVEN_ABBR/bin/mvn
  MAVEN_LINK=$MAVEN_BASEDIR/mvn$MAVEN_ABBR
  MAVEN_USR_BIN=/usr/bin/mvn$MAVEN_ABBR

  execute_quietly "rm -rf $MAVEN_DIR $MAVEN_LINK $MAVEN_USR_BIN"
  execute_quietly "unzip $LOCAL_MAVEN_ZIP_FILE -d $MAVEN_BASEDIR"
  execute_quietly "chmod -R 755 $MAVEN_DIR"
  execute_quietly "ln -s $MAVEN_TARGET $MAVEN_LINK"
  execute_quietly "ln -s $MAVEN_BASEDIR/mvn$MAVEN_ABBR/bin/mvn $MAVEN_USR_BIN"
  
}

function install_default_maven {
  MAVEN_ABBR=$1

  echo "install   -> default maven mvn$MAVEN_ABBR"

  MAVEN_TARGET=$MAVEN_BASEDIR/mvn$MAVEN_ABBR/bin/mvn
  MAVEN_USR_BIN=/usr/bin/mvn

  rm -rf $MAVEN_USR_BIN
  ln -s $MAVEN_TARGET $MAVEN_USR_BIN
  chmod 755 $MAVEN_BASEDIR
}

# Make sure /usr/bin/java points to JDK7  
function configure_java {

  echo "configure -> default java"
  echo "jenkins   -> master :: $JENKINS_MASTER"
  
  # the default /root/.bashrc that ships with 12.04 automatically imports /root/.bash_aliases
  ROOT_ALIASES=/root/.bash_aliases
  echo "JAVA_HOME=/usr/java/jdk7"                        >  $ROOT_ALIASES
  echo "PATH=\$JAVA_HOME/bin:$PATH:."                    >> $ROOT_ALIASES
  echo "MAVEN_OPTS=\"$MAVEN_OPTS\""                      >> $ROOT_ALIASES
  echo "JENKINS_MASTER=\"$JENKINS_MASTER\""              >> $ROOT_ALIASES
  echo "export JAVA_HOME PATH MAVEN_OPTS JENKINS_MASTER" >> $ROOT_ALIASES

  # remove whatever's at /usr/bin/java and replace it with a symbolic link to jdk7
  rm -rf /usr/bin/java
  ln -s /usr/java/jdk7/bin/java /usr/bin/java
  
}

function configure_secrets {

  # Extract secrets into /root/.ssh
  echo "configure -> secrets"
  GPG_ENCRYPTED=$MY_DIR/secrets.zip.gpg
  GPG_DECRYPTED=$MY_DIR/secrets.zip
  decrypt_file $GPG_ENCRYPTED $GPG_DECRYPTED
  execute_quietly "unzip -o $GPG_DECRYPTED -d /root"
  execute_quietly "rm $GPG_DECRYPTED"

  # Setup GPG
  GPG_KEY=/root/.ssh/jcaddel.gpg.private
  rm -rf /root/.gnupg
  execute_quietly "gpg --allow-secret-key-import --import $GPG_KEY"
  
  # setup maven
  execute_quietly "mkdir -p /root/.m2/repository"  
  execute_quietly "mv /root/.ssh/settings.xml /root/.m2/settings.xml"
  
}

function configure_subversion {

  echo "configure -> subversion"
  SVN_BASEDIR=/root/.subversion
  SVN_SERVERS=$SVN_BASEDIR/servers
  
  rm -rf $SVN_BASEDIR; mkdir -p $SVN_BASEDIR
  echo "[global]"                      >  $SVN_SERVERS
  echo "store-plaintext-passwords=yes" >> $SVN_SERVERS
  
}

function touch_subversion_repo {

  SVN_REPO=$1
  check_not_blank SVN_REPO $SVN_REPO
  
  SVN_TOUCH_URL="https://svn.kuali.org/repos/$SVN_REPO/sandbox/kuali-devops/temp/auth-check/touch"
  echo "touch     -> svn:$SVN_REPO - [$SVN_TOUCH_URL]"

  SVN_USERNAME=jcaddel
  SVN_PASSWORD_FILE="/root/.ssh/subversion.password"
  SVN_PASSWORD=$(<$SVN_PASSWORD_FILE)
  check_not_blank SVN_PASSWORD $SVN_PASSWORD
  SVN_AUTH="--username=$SVN_USERNAME --password=$SVN_PASSWORD"
  # the message can't have spaces in it
  SVN_MESSAGE="automated-auth-check"
  execute_quietly "svn mkdir  $SVN_TOUCH_URL --message $SVN_MESSAGE --parents $SVN_AUTH"
  execute_quietly "svn delete $SVN_TOUCH_URL --message $SVN_MESSAGE"
  
}

function touch_subversion_repos {

  touch_subversion_repo foundation
  touch_subversion_repo rice
  touch_subversion_repo student
  touch_subversion_repo ole
  touch_subversion_repo mobility
  touch_subversion_repo kpme
  
}


function check_args {
  check_not_blank JENKINS_MASTER $JENKINS_MASTER
  check_not_blank GPG_PASSPHRASE $GPG_PASSPHRASE
}

MY_DIR="$( cd "$( dirname "$0" )" && pwd )"
ME=$(basename $0)
source $MY_DIR/../common/functions.sh

usage() { echo "Usage: $ME [-h] [-q] [-m \"-Xmx2g -XX:MaxPermSize=256m\"] [-p \"package1 package2 package3\"] master password" 1>&2; exit 1; }

QUIET=false
PACKAGES="subversion git graphviz firefox"
MAVEN_OPTS="-Xmx2g -XX:MaxPermSize=256m"
while getopts hqm:p: flag; do
  case $flag in
    h)
      usage;
      ;;
    q)
      QUIET="true";
      ;;
    p)
      PACKAGES="$PACKAGES $OPTARG";
      ;;
    m)
      MAVEN_OPTS="$OPTARG";
      ;;
    ?)
      usage;
      exit;
      ;;
  esac
done

shift $(( OPTIND - 1 ));

JENKINS_MASTER=$1
GPG_PASSPHRASE=$2

check_args

QUIET_FLAG=""
if [ "$QUIET" == "true" ]; then
  QUIET_FLAG="-q"
fi
MAVEN_BASEDIR=/usr/maven

configure_java
configure_secrets
install_packages
install_maven 3.0.5 30
install_maven 3.1.0 31
install_maven 3.2.1 32
install_default_maven 32

configure_subversion

#
# SVN caches and then looks up credentials based on the hostname + hostname hash
#
# eg for jcaddel/<password> @ https://svn.kuali.org
#
# The file -> /root/.subversion/auth/svn.simple/7bde6701d85dbc4080b5213025d59913
# ...
# <https://svn.kuali.org:443> SVN Login
# ...
#
# This means we only need to cache one set of credentials for all repo's at kuali
# That set of credentials will then work transparently for all repo's 
#
touch_subversion_repo foundation
# touch_subversion_repos
