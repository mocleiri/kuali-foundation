#!/bin/bash
#
# Copyright 2004-2014 The Kuali Foundation
#
# Licensed under the Educational Community License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.opensource.org/licenses/ecl2.php
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

function get_jdk_fragment {
  echo "JDK${JDK_LEVEL}_FRAGMENT"
}

function install_jdk {

  JDK6_FRAGMENT=1.6.0
  JDK7_FRAGMENT=1.7.0
  JDK8_FRAGMENT=1.8.0

  # Extract the jdk level from the JDK variable
  JDK_LEVEL=${JDK:3:1}
  check_not_blank JDK_LEVEL $JDK_LEVEL
  
  # Extract a specific jdk version based on the jdk level
  JDK_FRAGMENT_VAR=$(get_jdk_fragment)
  
  JDK_GROUP_ID=com.oracle
  JDK_ARTIFACT_ID=$JDK
  JDK_CLASSIFIER=linux-x64
  JDK_VERSION=${!JDK_FRAGMENT_VAR}-$JDK_UPDATE
  JDK_TYPE=zip

  NEXUS_USER=developer
  NEXUS_PASSWORD=jA0ECQMCYpWe5Z+W3Em+0j4BwNhCtOhfaxUIp1eJ4czuEuyYjJknpsk4SixovPkZ3m85USs0OvK5uxRcpuc2jVT/r7bhBFLqU2s+N4K1vQ==
  NEXUS_PASSWORD=$(decrypt $NEXUS_PASSWORD $GPG_PASSPHRASE)

  NEXUS_DEV_REPO="http://nexus.kuali.org/content/groups/developer"

  # Make the call to the smart downloader
  $MY_DIR/m2download $QUIET_FLAG --repo="$NEXUS_DEV_REPO" --classifier=$JDK_CLASSIFIER --type=$JDK_TYPE --username=$NEXUS_USER --password=$NEXUS_PASSWORD $JDK_GROUP_ID $JDK_ARTIFACT_ID $JDK_VERSION
  
  JDK_UNZIP_DIR=$JDK_ARTIFACT_ID-$JDK_VERSION
  JDK_ZIP_FILE=$JDK_ARTIFACT_ID-$JDK_VERSION-$JDK_CLASSIFIER.$JDK_TYPE
  JDK_BASEDIR=/usr/java
  mkdir -p $JDK_BASEDIR

  # Make sure the JDK and the symbolic link are both gone
  JDK_TARGET=$JDK_BASEDIR/$JDK_UNZIP_DIR
  JDK_LINK=$JDK_BASEDIR/$JDK_ARTIFACT_ID
  echo "purge     -> $JDK"
  rm -rf $JDK_LINK $JDK_TARGET

  # Unpack the JDK into /usr/java
  echo "install   -> $JDK_LINK - [$JDK_TARGET]"
  M2_LOCAL_PATH=$($MY_DIR/m2path $JDK_GROUP_ID $JDK_ARTIFACT_ID $JDK_VERSION --classifier="$JDK_CLASSIFIER" --type="$JDK_TYPE")
  execute_quietly "unzip -o $M2_LOCAL_PATH -d $JDK_BASEDIR"

  # Create the symbolic link  eg: /usr/java/jdk7 -> /usr/java/jdk7-1.7.0-u51
  execute_quietly "ln -s $JDK_TARGET $JDK_LINK"
  
  TOOLS_JAR=$JDK_LINK/lib/tools.jar
  TOOLS_JAR_COPY=$JDK_LINK/jre/lib/ext/tools.jar
  echo "copy      -> $TOOLS_JAR_COPY"
  execute_quietly "cp $TOOLS_JAR $TOOLS_JAR_COPY"
  
}

function check_args {

  check_not_blank JDK $JDK
  check_not_blank JDK_UPDATE $JDK_UPDATE
  check_not_blank GPG_PASSPHRASE $GPG_PASSPHRASE
  check_jdk
    
}

MY_DIR="$( cd "$( dirname "$0" )" && pwd )"
ME=$(basename $0)
source $MY_DIR/functions.sh

usage() { echo "Usage: $ME [-h] [-q] jdk6/jdk7/jdk8 u45/u51/u0 password" 1>&2; exit 1; }

QUIET=false
while getopts hq flag; do
  case $flag in
    h)
      usage;
      ;;
    q)
      QUIET="true";
      ;;
    ?)
      usage;
      exit;
      ;;
  esac
done

shift $(( OPTIND - 1 ));

JDK=$1
JDK_UPDATE=$2
GPG_PASSPHRASE=$3

check_args

QUIET_FLAG=""
if [ "$QUIET" == "true" ]; then
  QUIET_FLAG="-q"
fi

install_jdk
