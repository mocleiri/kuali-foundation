#!/bin/bash
#
# Copyright 2004-2014 The Kuali Foundation
#
# Licensed under the Educational Community License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.opensource.org/licenses/ecl2.php
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

function get_jdk_fragment {
  echo "JDK${JDK_LEVEL}_FRAGMENT"
}

function install_jdk {

  JDK6_FRAGMENT=1.6.0
  JDK7_FRAGMENT=1.7.0

  # Extract the jdk level from the JDK variable
  JDK_LEVEL=${JDK:3:1}
  
  JDK_FRAGMENT_VAR=JDK${!JDK_LEVEL}_FRAGMENT
  
  # Extract a specific jdk version based on the jdk level
  JDK_VERSION=${!JDK_FRAGMENT_VAR}-$JDK_UPDATE
  
  echo "jdk version=[$JDK_VERSION]"
  
  exit 1
  
  JDK_GROUP_ID=com/oracle
  JDK_ARTIFACT_ID=$JDK
  JDK_CLASSIFIER=linux-x64
  JDK_TYPE=zip

  M2_REPO_LOCAL="$HOME/.m2/repository"
  M2_REPO_NEXUS="http://nexus.kuali.org/content/groups/developer"
  LOCAL_M2_REPO_FILE="$(get_m2_repo_filename $M2_REPO_LOCAL $JDK_GROUP_ID $JDK_ARTIFACT_ID $JDK_VERSION $JDK_CLASSIFIER $JDK_TYPE)"
  NEXUS_M2_REPO_FILE="$(get_m2_repo_filename $M2_REPO_NEXUS $JDK_GROUP_ID $JDK_ARTIFACT_ID $JDK_VERSION $JDK_CLASSIFIER $JDK_TYPE)"

  JDK_UNZIP_DIR=$JDK_ARTIFACT_ID-$JDK_VERSION
  JDK_ZIP_FILE=$JDK_ARTIFACT_ID-$JDK_VERSION-$JDK_CLASSIFIER.$JDK_TYPE
  JDK_BASEDIR=/usr/java
  mkdir -p $JDK_BASEDIR

  NEXUS_CONFIG_DIR=$MY_DIR/../../../nexus
  GPG_ENCRYPTED=$NEXUS_CONFIG_DIR/nexus.password.gpg
  GPG_DECRYPTED=$NEXUS_CONFIG_DIR/nexus.password
  echo "decrypt   -> nexus password"
  decrypt_file $GPG_ENCRYPTED $GPG_DECRYPTED

  NEXUS_USER=developer
  NEXUS_PASSWORD=$(<$GPG_DECRYPTED)
  execute_quietly "rm $GPG_DECRYPTED"

  # Make the call to the smart downloader
  QUIET_FLAG=""
  if [ "$QUIET" == "true" ]; then
    QUIET_FLAG="-q"
  fi
  $MY_DIR/smartdownloader $QUIET_FLAG $JDK_GROUP_ID $JDK_ARTIFACT_ID $JDK_VERSION $NEXUS_M2_REPO_FILE --username="$NEXUS_USER" --password="$NEXUS_PASSWORD" --classifier="$JDK_CLASSIFIER" --type="$JDK_TYPE"
  
  # Make sure the JDK and the symbolic link are both gone
  JDK_TARGET=$JDK_BASEDIR/$JDK_UNZIP_DIR
  JDK_LINK=$JDK_BASEDIR/$JDK_ARTIFACT_ID
  echo "purge     -> $JDK"
  rm -rf $JDK_LINK $JDK_TARGET

  # Unpack the JDK into /usr/java
  echo "install   -> $JDK_LINK - [$JDK_TARGET]"
  execute_quietly "unzip -o $LOCAL_M2_REPO_FILE -d $JDK_BASEDIR"

  # Create the symbolic link  eg: /usr/java/jdk7 -> /usr/java/jdk7-1.7.0-u51
  execute_quietly "ln -s $JDK_TARGET $JDK_LINK"
  
  TOOLS_JAR=$JDK_LINK/lib/tools.jar
  TOOLS_JAR_COPY=$JDK_LINK/jre/lib/ext/tools.jar
  echo "copy      -> $TOOLS_JAR_COPY"
  execute_quietly "cp $TOOLS_JAR $TOOLS_JAR_COPY"
  
}

function check_args {
  check_not_blank JDK $JDK
  check_not_blank JDK_UPDATE $JDK_UPDATE
  check_not_blank GPG_PASSPHRASE $GPG_PASSPHRASE
  check_jdk  
}

MY_DIR="$( cd "$( dirname "$0" )" && pwd )"
ME=$(basename $0)
source $MY_DIR/functions.sh

usage() { echo "Usage: $ME [-h] [-q] jdk6/jdk7 u45/u51 password" 1>&2; exit 1; }

QUIET=false
while getopts hq flag; do
  case $flag in
    h)
      usage;
      ;;
    q)
      QUIET="true";
      ;;
    ?)
      usage;
      exit;
      ;;
  esac
done

shift $(( OPTIND - 1 ));

JDK=$1
JDK_UPDATE=$2
GPG_PASSPHRASE=$3

check_args

install_jdk
