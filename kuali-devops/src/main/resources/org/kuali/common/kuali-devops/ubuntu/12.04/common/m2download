#!/bin/bash

function check_args {
  check_not_blank LOCAL $LOCAL
  check_not_blank REPO $REPO
  check_not_blank GROUP_ID $GROUP_ID
  check_not_blank ARTIFACT_ID $ARTIFACT_ID
  check_not_blank VERSION $VERSION
  check_not_blank TYPE $TYPE
}

MY_DIR="$( cd "$( dirname "$0" )" && pwd )"
ME=$(basename $0)
source $MY_DIR/functions.sh

usage() { echo "Usage: $ME [-h --help] [-q --quiet] [-c --classifier=linux-x64] [-t --type=zip] [-u --username=developer] [-p --password=password] [-l --local=\$HOME/.m2/repository] repo group_id artifact_id version" 1>&2; exit 1; }

QUIET=false
LOCAL=$HOME/.m2/repository
CLASSIFIER=""
TYPE=jar
USERNAME=""
PASSWORD=""

ARGS=$(getopt --options hqc:t:u:p:l: --longoptions "help,quiet,classifier:,type:,username:,password:,local:" --name "$ME" -- "$@");
if [ $? -ne 0 ]; then usage; fi
eval set -- "$ARGS";
while true; do
  case "$1" in
    -h|--help)
      usage;
      shift;
      ;;
    -q|--quiet)
      QUIET=true;
      shift;
      ;;
    -l|--local)
      shift;
      LOCAL="$1";
      shift;
      ;;
    -c|--classifier)
      shift;
      CLASSIFIER="$1";
      shift;
      ;;
    -t|--type)
      shift;
      TYPE="$1";
      shift;
      ;;
    -p|--password)
      shift;
      PASSWORD="$1";
      shift;
      ;;
    -u|--username)
      shift;
      USERNAME="$1";
      shift;
      ;;
    -t|--type)
      shift;
      TYPE="$1";
      shift;
      ;;
    --)
      shift;
      break;
      ;;
  esac
done

REPO=$1
GROUP_ID=$2
ARTIFACT_ID=$3
VERSION=$4

check_args

M2_LOCAL_PATH=$($MY_DIR/m2path  --repo="$LOCAL" $GROUP_ID $ARTIFACT_ID $VERSION --classifier="$CLASSIFIER" --type="$TYPE")
M2_REMOTE_PATH=$($MY_DIR/m2path --repo="$REPO"  $GROUP_ID $ARTIFACT_ID $VERSION --classifier="$CLASSIFIER" --type="$TYPE")

if [ ! -f $M2_LOCAL_PATH ]; then
  echo "download  -> $M2_REMOTE_PATH"
  #echo "to        -> $M2_LOCAL_PATH"
  download_url $M2_REMOTE_PATH $M2_LOCAL_PATH $USERNAME $PASSWORD
else 
  #echo "skip      -> $M2_REMOTE_PATH"
  #echo "exists    -> $M2_LOCAL_PATH"
fi
