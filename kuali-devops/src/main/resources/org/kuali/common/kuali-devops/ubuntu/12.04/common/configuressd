#!/bin/bash

function execute_quietly {
  COMMAND=$1
  if [ "$QUIET" = "true" ]; then
    $COMMAND > /dev/null 2>&1
  else
    echo "$COMMAND"
    $COMMAND
  fi
  check_status $COMMAND
}

function check_status {
  STATUS="$?"
  if [ ! "$STATUS" == "0" ]; then
    echo
    echo "error executing: \"$COMMAND\""
    echo "exit value: $STATUS"
    echo 
    exit $STATUS
  fi
}

function dismount_existing {
  if mountpoint -q $OLD_SSD_MOUNT; then
    echo "unmount   -> $OLD_SSD_MOUNT"
    execute_quietly "umount $OLD_SSD_MOUNT"
  fi

  if mountpoint -q $NEW_SSD_MOUNT; then
    echo "unmount   -> $NEW_SSD_MOUNT"
    execute_quietly "umount $NEW_SSD_MOUNT"
  fi
}

function create_ssd_mount {
  echo "mdadm     -> create raid 0 stripe"
  if [ "$QUIET" == "true" ]; then
    yes | mdadm --create --verbose /dev/md/ssd --level=stripe --raid-devices=2 /dev/xvdb /dev/xvdc > /dev/null 2>&1 
  else
    yes | mdadm --create --verbose /dev/md/ssd --level=stripe --raid-devices=2 /dev/xvdb /dev/xvdc 
  fi
  echo "create    -> filesystem"
  execute_quietly "mkfs.ext3 /dev/md/ssd" 
  execute_quietly "mkdir -p $NEW_SSD_MOUNT"
  echo "mount     -> $NEW_SSD_MOUNT"
  execute_quietly "mount /dev/md/ssd $NEW_SSD_MOUNT"
  execute_quietly "rm -rf $OLD_SSD_MOUNT"
}

MY_DIR="$( cd "$( dirname "$0" )" && pwd )"
ME=$(basename $0)

QUIET=$1
if [ "$QUIET" == "-q" ]; then
  QUIET=true
fi

OLD_SSD_MOUNT="/mnt"
NEW_SSD_MOUNT="/ssd"

echo "packages  -> mdadm"
execute_quietly "apt-get install mdadm -y --no-install-recommends"

dismount_existing
create_ssd_mount


#sudo apt-get install mdadm -y --no-install-recommends
#sudo umount /mnt
#sudo yes | mdadm --create --verbose /dev/md/ssd --level=stripe --raid-devices=2 /dev/xvdb /dev/xvdc
#sudo mkfs.ext3 /dev/md/ssd
#sudo mkdir -p /ssd
#sudo mount /dev/md/ssd /ssd
#sudo rm -rf /mnt
