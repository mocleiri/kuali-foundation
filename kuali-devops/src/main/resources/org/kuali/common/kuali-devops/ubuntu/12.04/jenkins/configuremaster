#!/bin/bash
#
# Copyright 2004-2014 The Kuali Foundation
#
# Licensed under the Educational Community License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.opensource.org/licenses/ecl2.php
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

function configure_tomcat_user {

  echo "purge     -> gpg ssh m2 svn"
  rm -rf $TOMCAT_HOME/.gnupg $TOMCAT_HOME/.ssh $TOMCAT_HOME/.m2 $TOMCAT_HOME/.subversion
  cp -R /root/.gnupg        $TOMCAT_HOME
  cp -R /root/.ssh          $TOMCAT_HOME
  cp -R /root/.subversion   $TOMCAT_HOME
  echo "copy      -> root m2 repo"
  execute_quietly "rsync --archive --verbose --stats /root/.m2 $TOMCAT_HOME --exclude=**/com/oracle/jdk*/** --exclude=**/firefox/** --exclude=**/org/jenkins/**" 
  
  # Make sure everything is owned by tomcat
  chown -R $TOMCAT:$TOMCAT $TOMCAT_HOME
  
}

function configure_jenkins_location {

  # explain what we are up to
  echo "configure -> jenkins:location"

  # This is the config file holding the jenkins location and admin email address
  JENKINS_LOCATION_CONFIG_FILE=$JENKINS_HOME/jenkins.model.JenkinsLocationConfiguration.xml

  # Update the admin email address
  FIND="<adminAddress>.*</adminAddress>"
  REPLACE="<adminAddress>$JENKINS_ADMIN_EMAIL_ADDRESS</adminAddress>"
  execute_quietly "sed -i -e s:$FIND:$REPLACE:g $JENKINS_LOCATION_CONFIG_FILE"

  # Update the jenkins url
  FIND="<jenkinsUrl>.*</jenkinsUrl>"
  REPLACE="<jenkinsUrl>https\://$JENKINS_MASTER</jenkinsUrl>"
  execute_quietly "sed -i -e s:$FIND:$REPLACE:g $JENKINS_LOCATION_CONFIG_FILE"

}

function update_jenkins_config_xml {

  # This is the main jenkins config file
  JENKINS_CONFIG_FILE=$JENKINS_HOME/config.xml

  # Update the CAS url according to the stack we are configuring test/prod
  # explain what we are up to
  CAS=test-cas.kuali.org
  if [ "$STACK" == "prod" ]; then
    CAS=cas.kuali.org
  fi
  echo "configure -> jenkins:cas [$CAS]"
  FIND="<casServerUrl>.*</casServerUrl>"
  REPLACE="<casServerUrl>https://$CAS</casServerUrl>"
  execute_quietly "sed -i -e s@$FIND@$REPLACE@g $JENKINS_LOCATION_CONFIG_FILE"

  # Update the EC2 Region
  echo "configure -> jenkins:region"
  execute_quietly "sed -i -e s@<name>ec2-.*</name>@<name>ec2-$REGION</name>@g $JENKINS_CONFIG_FILE"
  execute_quietly "sed -i -e s@<region>.*</region>@<region>$REGION</region>@g $JENKINS_CONFIG_FILE"
  
  echo "configure -> jenkins:slaves (remove)"
  # delete everything between <slaves> and </slaves> (including the tags themselves)
  execute_quietly "sed -i /<slaves>/,/<\/slaves>/d $JENKINS_CONFIG_FILE"
  
  echo "configure -> jenkins:slave:stack:tag"
  # This is the line number containing the name for the tag "Stack"
  STACK_TAG_NAME_LINE_NUMBER=$(cat -n $JENKINS_CONFIG_FILE | grep "<name>Stack</name>" | cut -f 1 | xargs)
  # The next line contains the value for "Stack" eg test/prod
  STACK_TAG_VALUE_LINE_NUMBER=$(($STACK_TAG_NAME_LINE_NUMBER + 1))
  # Replace the Stack value with what needs to be there
  execute_quietly "sed -i -e ${STACK_TAG_VALUE_LINE_NUMBER}s/<value>.*<\/value>/<value>$STACK<\/value>/ $JENKINS_CONFIG_FILE"
  
  echo "configure -> jenkins:master:env:tag"
  # This is the line number containing the name of the environment variable "JENKINS_MASTER"
  JENKINS_MASTER_ENV_LINE_NUMBER=$(cat -n $JENKINS_CONFIG_FILE | grep "<string>JENKINS_MASTER</string>" | cut -f 1 | xargs)
  # The next line contains the value
  JENKINS_MASTER_ENV_LINE_NUMBER=$(($JENKINS_MASTER_ENV_LINE_NUMBER + 1))
  # Update the value
  execute_quietly "sed -i -e ${JENKINS_MASTER_ENV_LINE_NUMBER}s/<string>.*<\/string>/<string>$FQDN<\/string>/ $JENKINS_CONFIG_FILE"
  
  echo "configure -> jenkins:master:ec2:stack"
  # This is the line number containing the name of the environment variable "EC2_STACK"
  EC2_STACK_LINE_NUMBER=$(cat -n $JENKINS_CONFIG_FILE | grep "<string>EC2_STACK</string>" | cut -f 1 | xargs)
  # The next line contains the value
  EC2_STACK_LINE_NUMBER=$(($EC2_STACK_LINE_NUMBER + 1))
  # Update the value
  execute_quietly "sed -i -e ${EC2_STACK_LINE_NUMBER}s/<string>.*<\/string>/<string>$STACK<\/string>/ $JENKINS_CONFIG_FILE"
  
  echo "configure -> jenkins:master:ec2:region"
  # This is the line number containing the name of the environment variable "EC2_REGION"
  EC2_REGION_LINE_NUMBER=$(cat -n $JENKINS_CONFIG_FILE | grep "<string>EC2_REGION</string>" | cut -f 1 | xargs)
  # The next line contains the value
  EC2_REGION_LINE_NUMBER=$(($EC2_REGION_LINE_NUMBER + 1))
  # Update the value
  execute_quietly "sed -i -e ${EC2_REGION_LINE_NUMBER}s/<string>.*<\/string>/<string>$REGION<\/string>/ $JENKINS_CONFIG_FILE"
  
  echo "configure -> jenkins:master:version"
  # This is the line number containing the name of the environment variable "JENKINS_VERSION"
  JENKINS_VERSION_LINE_NUMBER=$(cat -n $JENKINS_CONFIG_FILE | grep "<string>JENKINS_VERSION</string>" | cut -f 1 | xargs)
  # The next line contains the value
  JENKINS_VERSION_LINE_NUMBER=$(($JENKINS_VERSION_LINE_NUMBER + 1))
  # Update the value
  execute_quietly "sed -i -e ${JENKINS_VERSION_LINE_NUMBER}s/<string>.*<\/string>/<string>$JENKINS_VERSION<\/string>/ $JENKINS_CONFIG_FILE"
  
}

function configure_build_slave_ami_job {

  # explain what we are up to
  echo "configure -> jenkins:buildslavejob"
  
  # This is the config file containing the config for the job that updates the build slave AMI
  JENKINS_CONFIG_FILE=$JENKINS_HOME/jobs/kdo-create-build-slave-ami/config.xml

  execute_quietly "sed -i -e s:EC2_STACK=.*:EC2_STACK=$STACK:g    $JENKINS_CONFIG_FILE"
  execute_quietly "sed -i -e s:EC2_REGION=.*:EC2_REGION=$REGION:g $JENKINS_CONFIG_FILE"
  
}

function configure_jenkins {

  echo "configure -> jenkins"
  local GROUP_ID=org.jenkins
  local ARTIFACT_ID=jenkins-master-backup
  local VERSION=$JENKINS_VERSION
  local CLASSIFIER=$STACK-latest-$MODE
  local TYPE=tar.gz
  local PREFIX=private
  local BUCKET=maven.kuali.org
  source $MY_DIR/../common/aws.sh
  $MY_DIR/../common/m2s3get $QUIET_FLAG --prefix=$PREFIX --type=$TYPE --classifier=$CLASSIFIER $ACCESS_KEY $SECRET_KEY $BUCKET $GROUP_ID $ARTIFACT_ID $VERSION
  local TAR_GZ=$($MY_DIR/../common/m2path --classifier=$CLASSIFIER --type=$TYPE $GROUP_ID $ARTIFACT_ID $VERSION)
  
  execute_quietly "tar --extract --verbose --file $TAR_GZ --directory $TOMCAT_HOME"
  
  # Modify jenkins.model.JenkinsLocationConfiguration.xml with the proper dns value and admin email address
  configure_jenkins_location
  
  # Modify ~/.jenkins/config.xml as needed
  update_jenkins_config_xml

  # Modify ~/.jenkins/jobs/kdo-create-build-slave-ami/config.xml with the correct stack and region values
  #configure_build_slave_ami_job
  
  chown -R $TOMCAT:$TOMCAT $TOMCAT_HOME

}

function check_args {
  check_not_blank FQDN $FQDN
  check_not_blank REGION $REGION
  check_not_blank STACK $STACK
  check_not_blank MODE $MODE
  check_not_blank JENKINS_VERSION $JENKINS_VERSION
  check_not_blank GPG_PASSPHRASE $GPG_PASSPHRASE
  
  check_jenkins_mode
  
}

MY_DIR="$( cd "$( dirname "$0" )" && pwd )"
ME=$(basename $0)
source $MY_DIR/../common/functions.sh

usage() { echo "Usage: $ME [-h] [-q] fqdn region stack mode version password" 1>&2; exit 1; }

QUIET=false
while getopts hq flag; do
  case $flag in
    h)
      usage;
      ;;
    q)
      QUIET="true";
      ;;
    ?)
      usage;
      exit;
      ;;
  esac
done

shift $(( OPTIND - 1 ));

FQDN=$1
REGION=$2
STACK=$3
MODE=$4
JENKINS_VERSION=$5
GPG_PASSPHRASE=$6

check_args

JENKINS_MASTER=$FQDN
QUIET_FLAG=""
if [ "$QUIET" == "true" ]; then
  QUIET_FLAG="-q"
fi

TOMCAT=tomcat7
TOMCAT_HOME=/home/$TOMCAT
JENKINS_HOME=$TOMCAT_HOME/.jenkins
JENKINS_ADMIN_EMAIL_ADDRESS=jcaddel@kuali.org
JENKINS_TIMEZONE=US/Eastern
TOMCAT_OPT_FILE=/etc/default/$TOMCAT

echo "stop      -> $TOMCAT:service"
execute_quietly "service $TOMCAT stop"
configure_jenkins
echo "start     -> $TOMCAT:service"
execute_quietly "service $TOMCAT start"
echo "wait      -> jenkins:ready"
wait_for_string "/var/lib/$TOMCAT/logs/catalina.out" "Jenkins is fully up and running"

