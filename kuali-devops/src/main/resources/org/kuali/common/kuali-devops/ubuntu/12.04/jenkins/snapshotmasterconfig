function check_args {
  check_not_blank STACK $STACK
  check_not_blank MODE $MODE
  check_not_blank VERSION $VERSION
  check_not_blank GPG_PASSPHRASE $GPG_PASSPHRASE
  
  check_jenkins_mode
}

function create_tar_file {
   echo "tar.gz    -> /home/tomcat7/.jenkins"
   execute_quietly "rm -rf /ssd/master.*"
   execute_quietly "cd /home/tomcat7"

   # Config, but no jobs, build history or config history
   local  EMPTY="--exclude=**/plugins/** --exclude=**/workspace/** --exclude=**/jobs/** --exclude=**/config-history/**"

   # Same thing as thin but no build history or config history
   local  MIN="--exclude=**/plugins/** --exclude=**/workspace/** --exclude=**/logs/slaves/** --exclude=**/config-history/** --exclude=**/builds/** --exclude=**/lastStable/** --exclude=**/lastSuccessful/**"
   
   # All config including config history and build history
   local THIN="--exclude=**/plugins/** --exclude=**/workspace/** --exclude=**/logs/slaves/**"

   if [ $MODE == "empty" ]; then
     execute_quietly "tar --gzip --verbose --create --file $TAR_FILE .jenkins $EMPTY"
   fi
   if [ $MODE == "min" ]; then
     execute_quietly "tar --gzip --verbose --create --file $TAR_FILE .jenkins $MIN"
   fi
   if [ $MODE == "thin" ]; then
     execute_quietly "tar --gzip --verbose --create --file $TAR_FILE .jenkins $THIN"
   fi
   if [ $MODE == "full" ]; then
     execute_quietly "tar --gzip --verbose --create --file $TAR_FILE .jenkins"
   fi
   
   execute_quietly "cd $MY_DIR"
}


MY_DIR="$( cd "$( dirname "$0" )" && pwd )"
ME=$(basename $0)
source $MY_DIR/../common/functions.sh

usage() { echo "Usage: $ME [-q --quiet] [-h --help] stack mode version password" 1>&2; exit 1; }

QUIET=false

ARGS=$(getopt --options hqa:p:t:c: --longoptions "help,quiet,acl:,prefix:,type:,classifier:" --name "$ME" -- "$@");
if [ $? -ne 0 ]; then usage; fi
eval set -- "$ARGS";
while true; do
  case "$1" in
    -h|--help)
      usage;
      shift;
      ;;
    -q|--quiet)
      QUIET=true;
      shift;
      ;;
    --)
      shift;
      break;
      ;;
  esac
done

STACK=$1
MODE=$2
VERSION=$3
GPG_PASSPHRASE=$4

check_args

QUIET_FLAG=""
if [ "$QUIET" == "true" ]; then
  QUIET_FLAG="-q"
fi

ACL=authenticated-read
GROUP_ID=org.jenkins
ARTIFACT_ID=jenkins-master-backup
TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
CLASSIFIER=$STACK-$TIMESTAMP-$MODE
TYPE=tar.gz

source $MY_DIR/../common/aws.sh
BUCKET=maven.kuali.org
PREFIX=private

TAR_FILE=/ssd/master.tar.gz
create_tar_file

M2_PATH=$($MY_DIR/../common/m2path $GROUP_ID $ARTIFACT_ID $VERSION --repo=$BUCKET/$PREFIX --type=$TYPE --classifier=$CLASSIFIER)
echo "upload    -> https://$M2_PATH"
$MY_DIR/../common/m2s3put $QUIET_FLAG $TAR_FILE $ACCESS_KEY $SECRET_KEY $BUCKET $GROUP_ID $ARTIFACT_ID $VERSION --acl=$ACL --type=$TYPE --prefix=$PREFIX --classifier=$CLASSIFIER

CLASSIFIER=$STACK-latest-$MODE
M2_PATH=$($MY_DIR/../common/m2path $GROUP_ID $ARTIFACT_ID $VERSION --repo=$BUCKET/$PREFIX --type=$TYPE --classifier=$CLASSIFIER)
echo "upload    -> https://$M2_PATH"
$MY_DIR/../common/m2s3put $QUIET_FLAG $TAR_FILE $ACCESS_KEY $SECRET_KEY $BUCKET $GROUP_ID $ARTIFACT_ID $VERSION --acl=$ACL --type=$TYPE --prefix=$PREFIX --classifier=$CLASSIFIER
