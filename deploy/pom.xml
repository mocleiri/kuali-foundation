<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2009 The Kuali Foundation Licensed under the Educational Community
  License, Version 2.0 (the "License"); you may not use this file except in
  compliance with the License. You may obtain a copy of the License at
  http://www.osedu.org/licenses/ECL-2.0 Unless required by applicable law or
  agreed to in writing, software distributed under the License is distributed
  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  express or implied. See the License for the specific language governing
  permissions and limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.kuali</groupId>
    <artifactId>kuali-common</artifactId>
    <version>18</version>
  </parent>
  <artifactId>deploy</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>Kuali Application Deployment</name>
  <description>
    This POM deploys instances of Kuali Applications to
    environments on EC2. Any config files needed for an environment
    are automatically generated and copied over. The
    database is reset using Impex data.
    The steps it follows are:
    1 - Stop the remote Tomcat instance
    2 - Remove the directory on the remote server containing the old unpacked WAR file
    3 - Generate config files appropriate for the target environment
    4 - Copy config files into the environment
    5 - Copy a new WAR file into the environment
    6 - Reset the remote database
    7 - Perform any cleanup necessary (by default, it removes the old Tomcat logs and the old Tomcat "work" directory)
    8 - Restart the remote Tomcat instance
  </description>
  <repositories>
    <repository>
      <id>kuali.nexus</id>
      <name>Nexus Repository Manager</name>
      <url>http://nexus.kuali.org/content/groups/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <scm>
    <connection>scm:svn:http://svn.kuali.org/repos/foundation/trunk/deploy</connection>
    <developerConnection>scm:svn:http://svn.kuali.org/repos/foundation/trunk/deploy</developerConnection>
    <url>http://svn.kuali.org/repos/foundation/trunk/deploy</url>
  </scm>
  <properties>
    <project.build.testSourceDirectory>${project.basedir}/sampleapp/src/it/java</project.build.testSourceDirectory>
    <deploy.phase>package</deploy.phase>
    <maven.failsafe.forkmode>once</maven.failsafe.forkmode>
    <maven.failsafe.forkedProcessTimeoutInSeconds>7200</maven.failsafe.forkedProcessTimeoutInSeconds>
    <maven.failsafe.useSystemClassLoader>true</maven.failsafe.useSystemClassLoader>
    <maven.failsafe.skip>false</maven.failsafe.skip>
    <maven.failsafe.includes>**/*Test.java</maven.failsafe.includes>
    <scp.path>/usr/bin/scp</scp.path>
    <ssh.path>/usr/bin/ssh</ssh.path>
    <deploy.repositoryUrl>http://nexus.kuali.org/content/groups/public</deploy.repositoryUrl>
    <mvn.path>/opt/java/apache-maven-3.0.3/bin/mvn</mvn.path>
    <maven.test.skip>false</maven.test.skip>
    <kuali.testjar.phase>none</kuali.testjar.phase>
    <remote.user>root</remote.user>
    <remote.tomcat.shutdown>${remote.tomcat.home}/bin/forced-shutdown.sh</remote.tomcat.shutdown>
    <remote.tomcat.startup>${remote.tomcat.home}/bin/startup.sh</remote.tomcat.startup>
    <remote.tomcat.cleanup>${remote.tomcat.home}/bin/cleanup.sh</remote.tomcat.cleanup>
    <remote.war.file>${remote.tomcat.home}/webapps/ROOT.war</remote.war.file>
    <remote.war.dir>${remote.tomcat.home}/webapps/ROOT</remote.war.dir>
    <deploy.packaging>war</deploy.packaging>
    <local.filename>ROOT.war</local.filename>
    <!-- <local.war.file>${project.build.directory}/${local.filename}</local.war.file> -->
    <local.war.file>/opt/jenkins-home/jobs/rice-trunk-nightly/workspace/sampleapp/target/${deploy.artifactId}-${deploy.version}.war</local.war.file>
    <sampleapp.test.jar.file>/opt/jenkins-home/jobs/rice-trunk-nightly/workspace/sampleapp/target/${deploy.artifactId}-${deploy.version}-tests.jar</sampleapp.test.jar.file>
    <impex.dir>/opt/jenkins-home/jobs/rice-trunk-nightly/workspace/db/impex/master</impex.dir>
  </properties>
  <profiles>
    <profile>
      <id>rice</id>
      <properties>
        <deploy.auth>/home/ubuntu/kr-key.pem</deploy.auth>
      </properties>
    </profile>
    <profile>
      <id>sample-app</id>
      <properties>
        <deploy.groupId>org.kuali.rice</deploy.groupId>
        <deploy.artifactId>rice-sampleapp</deploy.artifactId>
        <deploy.version>2.0.0-m9-SNAPSHOT</deploy.version>
        <local.config.file.dir>${project.build.directory}/classes/rice</local.config.file.dir>
        <local.config.filename>sample-app-config.xml</local.config.filename>
        <local.config.file>${local.config.file.dir}/${local.config.filename}</local.config.file>
      </properties>
    </profile>
    <profile>
      <id>dev</id>
      <properties>
        <deploy.environment.name>dev</deploy.environment.name>
        <remote.tomcat.user>deploy</remote.tomcat.user>
        <remote.tomcat.home>/usr/local/tomcat_${remote.tomcat.user}</remote.tomcat.home>
        <remote.config.file>${remote.tomcat.home}/kuali/main/dev/${local.config.filename}</remote.config.file>
        <remote.hostname>deploy.rice.kuali.org</remote.hostname>
        <remote.public.url>http://dev.rice.kuali.org</remote.public.url>
        <impex.username>RICEDEV</impex.username>
        <impex.password>RICEDEV</impex.password>
        <impex.dba.password>gw570229</impex.dba.password>
        <impex.url>jdbc:oracle:thin:@deploy.rice.kuali.org:1521:KS</impex.url>
      </properties>
    </profile>
  </profiles>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.kuali.maven.plugins</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/*.xml</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <id>get</id>
            <phase>none</phase>
            <goals>
              <goal>get</goal>
            </goals>
            <configuration>
              <repositoryUrl>${deploy.repositoryUrl}</repositoryUrl>
              <groupId>${deploy.groupId}</groupId>
              <artifactId>${deploy.artifactId}</artifactId>
              <version>${deploy.version}</version>
              <packaging>${deploy.packaging}</packaging>
              <transitive>false</transitive>
            </configuration>
          </execution>
          <execution>
            <id>copy</id>
            <phase>none</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${deploy.groupId}</groupId>
                  <artifactId>${deploy.artifactId}</artifactId>
                  <version>${deploy.version}</version>
                  <type>${deploy.packaging}</type>
                  <destFileName>${local.filename}</destFileName>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.kuali.maven.plugins</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>stop-remote-tomcat</id>
            <phase>${deploy.phase}</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${ssh.path}</executable>
              <arguments>
                <argument>-i</argument>
                <argument>${deploy.auth}</argument>
                <argument>${remote.user}@${remote.hostname}</argument>
                <argument>${remote.tomcat.shutdown}</argument>
              </arguments>
              <successCodes>
                <successCode>0</successCode>
                <successCode>1</successCode>
              </successCodes>
            </configuration>
          </execution>
          <execution>
            <id>remove-remote-war-dir</id>
            <phase>${deploy.phase}</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${ssh.path}</executable>
              <arguments>
                <argument>-i</argument>
                <argument>${deploy.auth}</argument>
                <argument>${remote.user}@${remote.hostname}</argument>
                <argument>rm</argument>
                <argument>-rf</argument>
                <argument>${remote.war.dir}</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>copy-local-config-file-to-remote</id>
            <phase>${deploy.phase}</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${scp.path}</executable>
              <arguments>
                <argument>-i</argument>
                <argument>${deploy.auth}</argument>
                <argument>${local.config.file}</argument>
                <argument>${remote.user}@${remote.hostname}:${remote.config.file}</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>copy-local-war-file-to-remote</id>
            <phase>${deploy.phase}</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${scp.path}</executable>
              <arguments>
                <argument>-i</argument>
                <argument>${deploy.auth}</argument>
                <argument>${local.war.file}</argument>
                <argument>${remote.user}@${remote.hostname}:${remote.war.file}</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>reset-remote-database</id>
            <phase>${deploy.phase}</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${mvn.path}</executable>
              <workingDirectory>${impex.dir}</workingDirectory>
              <arguments>
                <argument>clean</argument>
                <argument>install</argument>
                <argument>-Pdb,oracle</argument>
                <argument>-Dimpex.username=${impex.username}</argument>
                <argument>-Dimpex.password=${impex.password}</argument>
                <argument>-Dimpex.dba.password=${impex.dba.password}</argument>
                <argument>-Dimpex.url=${impex.url}</argument>
                <argument>-Dimpex.dba.url=${impex.url}</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>cleanup-remote-tomcat</id>
            <phase>${deploy.phase}</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${ssh.path}</executable>
              <arguments>
                <argument>-i</argument>
                <argument>${deploy.auth}</argument>
                <argument>${remote.user}@${remote.hostname}</argument>
                <argument>su</argument>
                <argument>--login</argument>
                <argument>${remote.tomcat.user}</argument>
                <argument>--command</argument>
                <argument>${remote.tomcat.cleanup}</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>start-remote-tomcat</id>
            <phase>${deploy.phase}</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${ssh.path}</executable>
              <arguments>
                <argument>-i</argument>
                <argument>${deploy.auth}</argument>
                <argument>${remote.user}@${remote.hostname}</argument>
                <argument>su</argument>
                <argument>--login</argument>
                <argument>${remote.tomcat.user}</argument>
                <argument>--command</argument>
                <argument>${remote.tomcat.startup}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.kuali.maven.plugins</groupId>
        <artifactId>maven-http-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <id>wait-for-tomcat-startup</id>
            <phase>${deploy.phase}</phase>
            <goals>
              <goal>wait</goal>
            </goals>
            <configuration>
              <url>${remote.public.url}</url>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>selenium-maven-plugin</artifactId>
        <version>2.0</version>
        <executions>
          <execution>
            <id>xvfb</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>xvfb</goal>
            </goals>
          </execution>
          <execution>
            <id>start-selenium-server</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start-server</goal>
            </goals>
            <configuration>
              <background>true</background>
              <logOutput>true</logOutput>
            </configuration>
          </execution>
          <execution>
            <id>stop-selenium-server</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop-server</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.9</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <encoding>UTF-8</encoding>
          <systemPropertyVariables>
            <remote.public.url>${remote.public.url}</remote.public.url>
          </systemPropertyVariables>
          <skip>${maven.failsafe.skip}</skip>
          <useSystemClassLoader>${maven.failsafe.useSystemClassLoader}</useSystemClassLoader>
          <useFile>false</useFile>
          <failIfNoTests>false</failIfNoTests>
          <!--
            <includes>
            <include>${maven.failsafe.includes}</include>
            </includes> -->
          <includes>
            <include>**/FiscalOfficerInfoMaintenanceNewIT.java</include>
          </includes>
          <forkMode>${maven.failsafe.forkmode}</forkMode>
          <forkedProcessTimeoutInSeconds>${maven.failsafe.forkedProcessTimeoutInSeconds}</forkedProcessTimeoutInSeconds>
          <reportFormat>plain</reportFormat>
          <argLine>-Dalt.config.location="${build.alt.config.location}" -Xmx1024m -XX:MaxPermSize=512m
            -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled</argLine>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-sampleapp</artifactId>
            <version>${deploy.version}</version>
            <type>test-jar</type>
          </dependency>
          <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>2.6.0</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>