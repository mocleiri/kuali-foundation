<?xml version="1.0" encoding="UTF-8"?>
<!--

  Copyright 2010-2013 The Kuali Foundation

  Licensed under the Educational Community License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.opensource.org/licenses/ecl2.php

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<!-- Using this context requires the following parameters be set in the maven properties:
  sql.convert.vendor: the database vendor. Only "oracle" and "mysql" are supported.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

  <!--
    This context contains an executable that drops and then re-creates a database from scratch.

    It only runs if the property "project.db.reset=true" is located in a specific properties file.
    If the properties file does not exist, or the required property is not present in the properties file, nothing happens.
    If the property is present but is set to any value besides "true", nothing happens.
    If the property "project.db.reset=true" is located in the properties file, nothing happens until after the properties
    file has been updated with "project.db.reset=INPROGRESS".
    This sequence prevents the executable from running more than once unless an explicit action is taken.

    The executable requires these 2 properties
    1 - project.encoding - Is the encoding to use when reading/writing the properties file that controls the executable
    2 - project.home - Must point to a writable directory on the file system

    AND these 3 bean references
    1 - projectContext - Defines properties for the main project who's database will be reset
    2 - projectContextProperties - "Extra" properties for the main project that override everything except system/environment properties
    3 - otherProjectContexts - Defines properties for other projects that must be loaded
  -->

  <bean class="org.kuali.common.util.execute.RunOnceExecutable" init-method="execute">
    <property name="encoding" value="${project.encoding}" />
    <property name="property" value="project.db.reset" />
    <property name="skip" value="${project.db.reset.skip:false}" />
    <property name="propertiesFile" value="${project.home}/runonce.properties" />
    <property name="executable">
      <bean class="org.kuali.common.util.execute.SpringExecutable">
        <property name="context">
          <bean class="org.kuali.common.util.service.SpringContext">
            <property name="propertySourceContext">
              <bean class="org.kuali.common.util.service.PropertySourceContext">
                <property name="removeExistingSources" value="true" />
                <property name="sources">
                  <bean class="org.kuali.common.util.spring.GetPropertySourceFactoryBean">
                    <property name="project" ref="projectContext" />
                    <property name="properties" ref="projectContextProperties" />
                    <property name="others" ref="otherProjectContexts" />
                  </bean>
                </property>
              </bean>
            </property>
            <property name="annotatedClasses">
              <bean class="org.kuali.common.util.spring.GetClassFactoryBean">
                <property name="className" value="org.kuali.common.jdbc.spring.SqlControllerConfig" />
              </bean>
            </property>
          </bean>
        </property>
      </bean>
    </property>
  </bean>

</beans>