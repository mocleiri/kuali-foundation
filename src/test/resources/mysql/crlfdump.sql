--
-- Copyright 2010-2014 The Kuali Foundation
--
-- Licensed under the Educational Community License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.opensource.org/licenses/ecl2.php
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

-- MySQL dump 10.13  Distrib 5.5.18, for osx10.6 (i386)
--
-- Host: mysql.rice.kuali.org    Database: smartload
-- ------------------------------------------------------
-- Server version	5.1.63

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `krcr_style_t`
--

DROP TABLE IF EXISTS `krcr_style_t`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `krcr_style_t` (
  `STYLE_ID` varchar(40) COLLATE utf8_bin NOT NULL DEFAULT '',
  `NM` varchar(200) COLLATE utf8_bin NOT NULL,
  `XML` longtext COLLATE utf8_bin NOT NULL,
  `ACTV_IND` decimal(1,0) NOT NULL,
  `VER_NBR` decimal(8,0) DEFAULT '0',
  `OBJ_ID` varchar(36) COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`STYLE_ID`),
  UNIQUE KEY `KRCR_STYLE_TC0` (`OBJ_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `krcr_style_t`
--

LOCK TABLES `krcr_style_t` WRITE;
/*!40000 ALTER TABLE `krcr_style_t` DISABLE KEYS */;
INSERT INTO `krcr_style_t` VALUES ('2020','widgets','<xsl:stylesheet xmlns:my-class=\"xalan://org.kuali.rice.edl.framework.util.EDLFunctions\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n				<xsl:output method=\"html\" version=\"4.01\"/>\n				<xsl:variable name=\"globalReadOnly\" select=\"/documentContent/documentState/editable != \'true\'\"/>\n				<!-- determined by an appconstant -->\n				<xsl:variable name=\"showAttachments\" select=\"/documentContent/documentState/showAttachments\"/>\n				<xsl:strip-space elements=\"*\"/>\n\n				<xsl:template name=\"widget_render\">\n					<xsl:param name=\"fieldName\"/>\n					<xsl:param name=\"renderCmd\"/>\n					<xsl:param name=\"align\"/>\n					<xsl:param name=\"readOnly\"/>\n					<xsl:param name=\"customFunction\"/>\n					<xsl:param name=\"default\"/>\n					<xsl:for-each select=\"//fieldDef[@name=$fieldName]\">\n						<xsl:choose>\n							<xsl:when test=\"position() != 1\">\n								<h4>\n									<font color=\"#FF0000\"> fieldDef Name:  <xsl:value-of select=\"$fieldName\"/> is  duplicated ! </font>\n								</h4>\n							</xsl:when>\n							<xsl:otherwise>\n								<xsl:variable name=\"input_type\" select=\"display/type\"/>\n								<xsl:variable name=\"render\">\n									<xsl:choose>\n										<xsl:when test=\"$renderCmd\">\n											<xsl:value-of select=\"$renderCmd\"/>\n										</xsl:when>\n										<xsl:otherwise>\n											<xsl:value-of select=\"\'all\'\"/>\n										</xsl:otherwise>\n									</xsl:choose>\n								</xsl:variable>\n								<xsl:variable name=\"vAlign\">\n									<xsl:choose>\n										<xsl:when test=\"$align\">\n											<xsl:value-of select=\"$align\"/>\n										</xsl:when>\n										<xsl:otherwise>\n											<xsl:value-of select=\"\'horizontal\'\"/>\n										</xsl:otherwise>\n									</xsl:choose>\n								</xsl:variable>\n								<xsl:comment>* For JavaScript validation</xsl:comment>\n								<xsl:variable name=\"fieldDisplayName\">\n									<xsl:choose>\n										<xsl:when test=\"@title\">\n											<xsl:value-of select=\"@title\"/>\n										</xsl:when>\n										<xsl:otherwise>\n											<xsl:value-of select=\"@name\"/>\n										</xsl:otherwise>\n									</xsl:choose>\n								</xsl:variable>\n								<xsl:variable name=\"regex\" select=\"my-class:escapeJavascript(validation/regex)\"/>\n								<xsl:variable name=\"customValidator\" select=\"validation/customValidator\"/>\n								<xsl:variable name=\"validation_required\" select=\"validation/@required = \'true\'\"/>\n								<xsl:variable name=\"message\">\n									<!-- <xsl:if test=\"//edlContent/data/version[@current=\'true\']/field[@name=current()/@name]\"> -->\n									<xsl:choose>\n										<xsl:when test=\"//edlContent/data/version[@current=\'true\']/field[@name=current()/@name]/errorMessage\">\n											<xsl:value-of select=\"//edlContent/data/version[@current=\'true\']/field[@name=current()/@name]/errorMessage\"/>\n										</xsl:when>\n										<xsl:when test=\"//documentState/fieldError[@key=current()/@name]\">\n											<xsl:value-of select=\"//documentState/fieldError[@key=current()/@name]\"/>\n										</xsl:when>\n										<xsl:when test=\"validation/message\">\n											<xsl:value-of select=\"validation/message\"/>\n										</xsl:when>\n										<xsl:when test=\"validation/regex\">\n											<xsl:value-of select=\"$fieldDisplayName\"/> (<xsl:value-of select=\"@name\"/>) <xsl:text> does not match \'</xsl:text> <xsl:value-of select=\"$regex\"/> <xsl:text>\'</xsl:text>\n										</xsl:when>\n										<xsl:otherwise>\n									    <xsl:value-of select=\"//edlContent/data/version[@current=\'true\']/field[@name]\"/>\n											<xsl:comment>* Dropped Through and Hit Otherwise</xsl:comment>								\n										</xsl:otherwise>\n									</xsl:choose>\n									<!-- </xsl:if> -->\n								</xsl:variable>\n								<xsl:variable name=\"custommessage\">\n									<xsl:choose>\n										<xsl:when test=\"//edlContent/data/version[@current=\'true\']/field[@name=current()/@name]/errorMessage\">\n											<xsl:value-of select=\"//edlContent/data/version[@current=\'true\']/field[@name=current()/@name]/errorMessage\"/>\n										</xsl:when>\n										<xsl:otherwise>NONE</xsl:otherwise>\n									</xsl:choose>\n								</xsl:variable>\n								\n								<xsl:comment>* custom message: <xsl:value-of select=\"$custommessage\"/>\n</xsl:comment>\n								<xsl:comment>* validation/message: <xsl:value-of select=\"validation/message\"/>\n</xsl:comment>\n								<xsl:comment>* message: <xsl:value-of select=\"$message\"/>\n</xsl:comment>\n								<xsl:variable name=\"hasFieldError\" select=\"//documentState/fieldError[@key=current()/@name]\"/>\n								<xsl:variable name=\"invalid\" select=\"//edlContent/data/version[@current=\'true\']/field[@name=current()/@name]/@invalid\"/>\n								<!--\n									determine value to display: use the value specified in the current version	if it exists, otherwise use the \'default\' \n									value defined in the field or if specified use data from userSession\n								-->\n								<xsl:variable name=\"userValue\" select=\"//edlContent/data/version[@current=\'true\']/field[@name=current()/@name]/value\"/>\n								<xsl:variable name=\"hasUserValue\" select=\"boolean($userValue)\"/>\n								<xsl:variable name=\"value\">\n									<xsl:choose>\n										<xsl:when test=\"$hasUserValue\">\n											<xsl:value-of select=\"$userValue\"/>\n										</xsl:when>\n										<xsl:when test=\"$default\">\n											<xsl:value-of select=\"$default\"/>\n										</xsl:when>\n										<xsl:otherwise>\n											<xsl:value-of select=\"value\"/>\n										</xsl:otherwise>\n									</xsl:choose>\n								</xsl:variable>\n								<!-- message row -->\n								<xsl:variable name=\"type\">\n									<xsl:choose>\n										<xsl:when test=\"($invalid and $validation_required) or $hasFieldError\">error</xsl:when>\n										<xsl:when test=\"$invalid and not($validation_required)\">warning</xsl:when>\n										<xsl:otherwise>empty</xsl:otherwise>\n									</xsl:choose>\n								</xsl:variable>\n								<xsl:comment>* type: <xsl:value-of select=\"$type\"/>\n</xsl:comment>\n								<!-- \n									<tr class=\"{$type}_messageRow\" id=\"{@name}_messageRow\">\n										<td class=\"{$type}_messageHeaderCell\" id=\"{@name}_messageHeaderCell\">\n											<xsl:value-of select=\"$type\"/>\n										</td>\n										<td class=\"{$type}_messageDataCell\" id=\"{@name}_messageDataCell\">\n											<span id=\"{@name}_message\">\n												<xsl:value-of select=\"$message\"/>\n											</span>\n										</td>\n									</tr>\n								-->\n                                \n                                \n								<xsl:choose>\n									<xsl:when test=\"$input_type=\'text\'\">\n										<xsl:comment>* input_type \'text\'</xsl:comment>						\n										<xsl:call-template name=\"textbox_render\">\n											<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n											<xsl:with-param name=\"renderCmd\" select=\"$render\"/>\n											<xsl:with-param name=\"align\" select=\"$vAlign\"/>\n											<xsl:with-param name=\"hasUserValue\" select=\"$hasUserValue\"/>\n											<xsl:with-param name=\"value\" select=\"$value\"/>\n											<xsl:with-param name=\"invalid\" select=\"$invalid\"/>\n											<xsl:with-param name=\"regex\" select=\"$regex\"/>\n											<xsl:with-param name=\"customValidator\" select=\"$customValidator\"/>\n											<xsl:with-param name=\"message\" select=\"$message\"/>\n											<xsl:with-param name=\"validation_required\" select=\"$validation_required\"/>\n											<xsl:with-param name=\"readOnly\">\n                                                <xsl:choose>\n                                                    <xsl:when test=\"//fieldDef[@name=$fieldName]/lookup/lookupReadOnly = \'true\'\">true</xsl:when>\n                                                    <xsl:otherwise>\n<xsl:value-of select=\"$readOnly\"/>\n</xsl:otherwise>\n                                                </xsl:choose>\n                                            </xsl:with-param>\n											<xsl:with-param name=\"customFunction\" select=\"$customFunction\"/>\n										</xsl:call-template>\n									</xsl:when>\n									<xsl:when test=\"$input_type=\'password\'\">\n										<xsl:call-template name=\"textbox_render\">\n											<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n											<xsl:with-param name=\"renderCmd\" select=\"$render\"/>\n											<xsl:with-param name=\"align\" select=\"$vAlign\"/>\n											<xsl:with-param name=\"hasUserValue\" select=\"$hasUserValue\"/>\n											<xsl:with-param name=\"value\" select=\"$value\"/>\n											<xsl:with-param name=\"invalid\" select=\"$invalid\"/>\n											<xsl:with-param name=\"regex\" select=\"$regex\"/>\n											<xsl:with-param name=\"customValidator\" select=\"$customValidator\"/>\n											<xsl:with-param name=\"message\" select=\"$message\"/>\n											<xsl:with-param name=\"validation_required\" select=\"$validation_required\"/>\n											<xsl:with-param name=\"customFunction\" select=\"$customFunction\"/>\n										</xsl:call-template>\n									</xsl:when>\n									<xsl:when test=\"$input_type=\'radio\'\">\n										<xsl:call-template name=\"radio_render\">\n											<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n											<xsl:with-param name=\"renderCmd\" select=\"$render\"/>\n											<xsl:with-param name=\"align\" select=\"$vAlign\"/>\n											<xsl:with-param name=\"hasUserValue\" select=\"$hasUserValue\"/>\n											<xsl:with-param name=\"value\" select=\"$value\"/>\n											<xsl:with-param name=\"invalid\" select=\"$invalid\"/>\n											<xsl:with-param name=\"regex\" select=\"$regex\"/>\n											<xsl:with-param name=\"customValidator\" select=\"$customValidator\"/>\n											<xsl:with-param name=\"message\" select=\"$message\"/>\n											<xsl:with-param name=\"validation_required\" select=\"$validation_required\"/>\n											<xsl:with-param name=\"readOnly\" select=\"$readOnly\"/>\n											<xsl:with-param name=\"customFunction\" select=\"$customFunction\"/>\n										</xsl:call-template>\n									</xsl:when>\n									<xsl:when test=\"$input_type=\'checkbox\'\">\n										<xsl:call-template name=\"checkbox_render\">\n											<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n											<xsl:with-param name=\"renderCmd\" select=\"$render\"/>\n											<xsl:with-param name=\"align\" select=\"$vAlign\"/>\n											<xsl:with-param name=\"hasUserValue\" select=\"$hasUserValue\"/>\n											<xsl:with-param name=\"value\" select=\"$value\"/>\n											<xsl:with-param name=\"invalid\" select=\"$invalid\"/>\n											<xsl:with-param name=\"regex\" select=\"$regex\"/>\n											<xsl:with-param name=\"customValidator\" select=\"$customValidator\"/>\n											<xsl:with-param name=\"message\" select=\"$message\"/>\n											<xsl:with-param name=\"validation_required\" select=\"$validation_required\"/>\n											<xsl:with-param name=\"readOnly\" select=\"$readOnly\"/>\n											<xsl:with-param name=\"customFunction\" select=\"$customFunction\"/>\n										</xsl:call-template>\n									</xsl:when>\n									<xsl:when test=\"$input_type=\'select\'\">\n										<xsl:call-template name=\"select_input\">\n											<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n											<xsl:with-param name=\"renderCmd\" select=\"$render\"/>\n											<xsl:with-param name=\"align\" select=\"$vAlign\"/>\n											<xsl:with-param name=\"hasUserValue\" select=\"$hasUserValue\"/>\n											<xsl:with-param name=\"value\" select=\"$value\"/>\n											<xsl:with-param name=\"invalid\" select=\"$invalid\"/>\n											<xsl:with-param name=\"regex\" select=\"$regex\"/>\n											<xsl:with-param name=\"customValidator\" select=\"$customValidator\"/>\n											<xsl:with-param name=\"message\" select=\"$message\"/>\n											<xsl:with-param name=\"validation_required\" select=\"$validation_required\"/>\n											<xsl:with-param name=\"readOnly\" select=\"$readOnly\"/>\n											<xsl:with-param name=\"customFunction\" select=\"$customFunction\"/>\n										</xsl:call-template>\n									</xsl:when>\n									<xsl:when test=\"$input_type=\'select_refresh\'\">\n										<xsl:call-template name=\"select_input\">\n											<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n											<xsl:with-param name=\"renderCmd\" select=\"$render\"/>\n											<xsl:with-param name=\"align\" select=\"$vAlign\"/>\n											<xsl:with-param name=\"hasUserValue\" select=\"$hasUserValue\"/>\n											<xsl:with-param name=\"value\" select=\"$value\"/>\n											<xsl:with-param name=\"invalid\" select=\"$invalid\"/>\n											<xsl:with-param name=\"regex\" select=\"$regex\"/>\n											<xsl:with-param name=\"customValidator\" select=\"$customValidator\"/>\n											<xsl:with-param name=\"message\" select=\"$message\"/>\n											<xsl:with-param name=\"validation_required\" select=\"$validation_required\"/>\n											<xsl:with-param name=\"readOnly\" select=\"$readOnly\"/>\n											<xsl:with-param name=\"refreshPage\" select=\"\'true\'\"/>\n											<xsl:with-param name=\"customFunction\" select=\"$customFunction\"/>\n										</xsl:call-template>\n									</xsl:when>\n									<xsl:when test=\"$input_type=\'textarea\'\">\n										<xsl:call-template name=\"textarea_input\">\n											<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n											<xsl:with-param name=\"renderCmd\" select=\"$renderCmd\"/>\n											<xsl:with-param name=\"align\" select=\"$align\"/>\n											<xsl:with-param name=\"hasUserValue\" select=\"$hasUserValue\"/>\n											<xsl:with-param name=\"value\" select=\"$value\"/>\n											<xsl:with-param name=\"invalid\" select=\"$invalid\"/>\n											<xsl:with-param name=\"regex\" select=\"$regex\"/>\n											<xsl:with-param name=\"customValidator\" select=\"$customValidator\"/>\n											<xsl:with-param name=\"message\" select=\"$message\"/>\n											<xsl:with-param name=\"validation_required\" select=\"$validation_required\"/>\n											<xsl:with-param name=\"readOnly\" select=\"$readOnly\"/>\n											<xsl:with-param name=\"customFunction\" select=\"$customFunction\"/>\n										</xsl:call-template>\n									</xsl:when>\n									<xsl:when test=\"$input_type=\'button\'\">\n										<xsl:call-template name=\"button_input\">\n											<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n											<xsl:with-param name=\"renderCmd\" select=\"$renderCmd\"/>\n											<xsl:with-param name=\"align\" select=\"$align\"/>\n											<xsl:with-param name=\"hasUserValue\" select=\"$hasUserValue\"/>\n											<xsl:with-param name=\"value\" select=\"$value\"/>\n											<xsl:with-param name=\"invalid\" select=\"$invalid\"/>\n											<xsl:with-param name=\"regex\" select=\"$regex\"/>\n											<xsl:with-param name=\"customValidator\" select=\"$customValidator\"/>\n											<xsl:with-param name=\"message\" select=\"$message\"/>\n											<xsl:with-param name=\"validation_required\" select=\"$validation_required\"/>\n										</xsl:call-template>\n									</xsl:when>\n									<xsl:when test=\"$input_type=\'submit button\'\">\n										<xsl:call-template name=\"submitbutton_input\">\n											<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n											<xsl:with-param name=\"renderCmd\" select=\"$renderCmd\"/>\n											<xsl:with-param name=\"align\" select=\"$align\"/>\n											<xsl:with-param name=\"hasUserValue\" select=\"$hasUserValue\"/>\n											<xsl:with-param name=\"value\" select=\"$value\"/>\n											<xsl:with-param name=\"invalid\" select=\"$invalid\"/>\n											<xsl:with-param name=\"regex\" select=\"$regex\"/>\n											<xsl:with-param name=\"customValidator\" select=\"$customValidator\"/>\n											<xsl:with-param name=\"message\" select=\"$message\"/>\n											<xsl:with-param name=\"validation_required\" select=\"$validation_required\"/>\n										</xsl:call-template>\n									</xsl:when>\n									<xsl:when test=\"$input_type=\'hidden\'\">\n										<xsl:call-template name=\"hidden_input\">\n											<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n											<xsl:with-param name=\"value\" select=\"$value\"/>\n										</xsl:call-template>\n									</xsl:when>\n								</xsl:choose>\n								<xsl:if test=\"$renderCmd=\'all\' or $renderCmd=\'input\'\">\n                                    <xsl:call-template name=\"lookup\">\n                                      <xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n                                      <xsl:with-param name=\"readOnly\" select=\"$readOnly\"/>\n                                    </xsl:call-template>\n									<span class=\"{$type}Message\" id=\"{@name}_messageHeaderCell\">\n										<xsl:text> </xsl:text>\n<xsl:value-of select=\"$type\"/>\n<xsl:text>: </xsl:text>\n									</span>\n									<span class=\"{$type}Message\" id=\"{@name}_message\">\n										<xsl:value-of select=\"$message\"/>\n									</span>\n									<xsl:if test=\"validation/regex or validation/customValidator or validation[@required=\'true\']\">\n										<xsl:if test=\"not(validation/customValidator)\">\n											<script type=\"text/javascript\">\n												// register field for regex checking\n												register(\"<xsl:value-of select=\"@name\"/>\",\"<xsl:value-of select=\"$fieldDisplayName\"/>\",\"<xsl:value-of select=\"$regex\"/>\",\"<xsl:value-of select=\"$message\"/>\",\"<xsl:value-of select=\"$validation_required\"/>\");\n											</script>\n										</xsl:if>\n										<xsl:if test=\"validation/customValidator\">\n											<script type=\"text/javascript\">\n												// register field for custom field checking\n												register_custom(\"<xsl:value-of select=\"@name\"/>\",\"<xsl:value-of select=\"$fieldDisplayName\"/>\",\"<xsl:value-of select=\"$message\"/>\", \"<xsl:value-of select=\"$validation_required\"/>\", <xsl:value-of select=\"$customValidator\"/>);\n											</script>\n										</xsl:if>\n									</xsl:if>\n								</xsl:if>\n							</xsl:otherwise>\n						</xsl:choose>\n					</xsl:for-each>\n				</xsl:template>\n\n				<xsl:template name=\"textbox_render\">\n					<xsl:param name=\"fieldName\"/>\n					<xsl:param name=\"renderCmd\"/>\n					<xsl:param name=\"align\"/>\n					<xsl:param name=\"hasUserValue\"/>				\n					<xsl:param name=\"value\"/>\n					<xsl:param name=\"regex\"/>\n					<xsl:param name=\"message\"/>\n					<xsl:param name=\"validation_required\"/>\n					<xsl:param name=\"readOnly\"/>\n					<xsl:param name=\"customFunction\"/>\n					<xsl:if test=\"$renderCmd=\'all\' or  $renderCmd=\'title\'\">\n						<xsl:value-of select=\"current()/@title\"/>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'all\'\">\n						<xsl:if test=\"$align =\'horizontal\'\">\n							<xsl:text>          </xsl:text>\n						</xsl:if>\n						<xsl:if test=\"$align=\'vertical\'\">\n							<br/>\n						</xsl:if>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'all\' or $renderCmd=\'input\'\">\n						<xsl:if test=\"$globalReadOnly = \'true\' or $readOnly = \'true\'\">\n							<xsl:call-template name=\"hidden_input\">\n								<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n								<xsl:with-param name=\"value\" select=\"$value\"/>\n							</xsl:call-template>\n						</xsl:if>\n						<input value=\"{$value}\">\n							<xsl:if test=\"$customFunction\">\n							  <xsl:variable name=\"customFunction_val\" select=\"$customFunction\"/>\n							  <xsl:attribute name=\"onkeyup\">\n							    <xsl:value-of select=\"$customFunction\"/>\n							  </xsl:attribute>\n							</xsl:if>\n							<xsl:if test=\"$globalReadOnly = \'true\' or $readOnly = \'true\'\">\n								<xsl:attribute name=\"disabled\">\n								  disabled\n								</xsl:attribute>\n							</xsl:if>\n							<xsl:attribute name=\"type\">\n<xsl:value-of select=\"current()/display/type\"/>\n</xsl:attribute>\n							<xsl:attribute name=\"name\">\n<xsl:value-of select=\"$fieldName\"/>\n</xsl:attribute>\n							<xsl:attribute name=\"onkeydown\">return replaceEnter(event)</xsl:attribute>\n							<xsl:for-each select=\"current()/display/meta\">\n								<xsl:variable name=\"attrName\">\n									<xsl:value-of select=\"name\"/>\n								</xsl:variable>\n								<xsl:variable name=\"attrValue\">\n									<xsl:value-of select=\"value\"/>\n								</xsl:variable>\n								<xsl:attribute name=\"{$attrName}\">\n<xsl:value-of select=\"$attrValue\"/>\n</xsl:attribute>\n							</xsl:for-each>\n						</input>\n					</xsl:if>\n				</xsl:template>\n				\n				<xsl:template name=\"radio_render\">\n					<xsl:param name=\"fieldName\"/>\n					<xsl:param name=\"renderCmd\"/>\n					<xsl:param name=\"align\"/>\n					<xsl:param name=\"hasUserValue\"/>\n					<xsl:param name=\"value\"/>\n					<xsl:param name=\"readOnly\"/>\n					<xsl:param name=\"customFunction\"/>\n					<xsl:if test=\"$renderCmd=\'all\' or  $renderCmd=\'title\'\">\n						<xsl:value-of select=\"current()/@title\"/>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'all\'\">\n						<xsl:if test=\"$align =\'horizontal\'\">\n							<xsl:text>            </xsl:text>\n						</xsl:if>\n						<xsl:if test=\"$align=\'vertical\'\">\n							<br/>\n						</xsl:if>\n					</xsl:if>\n					<xsl:if test=\"$globalReadOnly = \'true\' or $readOnly = \'true\'\">\n						<xsl:call-template name=\"hidden_input\">			\n							<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n							<xsl:with-param name=\"value\" select=\"$value\"/>\n						</xsl:call-template>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'all\' or $renderCmd=\'input\'\">\n						<xsl:for-each select=\"current()/display/values\">\n							<xsl:variable name=\"title\">\n								<xsl:choose>\n									<xsl:when test=\"@title\">\n										<xsl:value-of select=\"@title\"/>\n									</xsl:when>\n									<xsl:otherwise>\n										<xsl:value-of select=\"@name\"/>\n									</xsl:otherwise>\n								</xsl:choose>\n							</xsl:variable>\n							<xsl:variable name=\"optionName\">\n								<xsl:value-of select=\"../../@name\"/>\n							</xsl:variable>\n							<input name=\"{$optionName}\" title=\"{$title}\" type=\"{../type}\" value=\"{.}\">\n							<xsl:if test=\"$customFunction\">\n							  <xsl:variable name=\"customFunction_val\" select=\"$customFunction\"/>\n							  <xsl:attribute name=\"onClick\">\n							    <xsl:value-of select=\"$customFunction\"/>\n							  </xsl:attribute>\n							</xsl:if>\n								<xsl:if test=\"$globalReadOnly = \'true\' or $readOnly = \'true\'\">\n									<xsl:attribute name=\"disabled\">disabled</xsl:attribute>\n								</xsl:if>\n								<xsl:choose>\n									<xsl:when test=\"$hasUserValue\">\n										<xsl:if test=\"//edlContent/data/version[@current=\'true\']/field[@name=current()/../../@name and value=current()]\">\n											<xsl:attribute name=\"checked\">checked</xsl:attribute>\n										</xsl:if>\n									</xsl:when>\n									<xsl:otherwise>\n										<!-- use the default if no user values are specified -->\n										<xsl:if test=\". = ../../value\">\n											<xsl:attribute name=\"checked\">checked</xsl:attribute>\n										</xsl:if>\n									</xsl:otherwise>\n								</xsl:choose>\n							</input>\n							<xsl:value-of select=\"$title\"/>\n							<xsl:if test=\"$align =\'horizontal\'\">\n								<xsl:text>           </xsl:text>\n							</xsl:if>\n							<xsl:if test=\"$align=\'vertical\'\">\n								<br/>\n							</xsl:if>\n						</xsl:for-each>\n					</xsl:if>\n				</xsl:template>\n\n				<xsl:template name=\"checkbox_render\">\n					<xsl:param name=\"fieldName\"/>\n					<xsl:param name=\"renderCmd\"/>\n					<xsl:param name=\"align\"/>\n					<xsl:param name=\"hasUserValue\"/>\n					<xsl:param name=\"value\"/>\n					<xsl:param name=\"readOnly\"/>\n					<xsl:param name=\"customFunction\"/>\n					<xsl:if test=\"$renderCmd=\'all\' or  $renderCmd=\'title\'\">\n						<xsl:value-of select=\"current()/@title\"/>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'all\'\">\n						<xsl:if test=\"$align =\'horizontal\'\">\n							<xsl:text>          </xsl:text>\n						</xsl:if>\n						<xsl:if test=\"$align=\'vertical\'\">\n							<br/>\n						</xsl:if>\n					</xsl:if>\n					<!-- \n						<xsl:if test=\"$globalReadOnly = \'true\'  or $readOnly = \'true\'\">\n							<xsl:call-template name=\"hidden_input\">			\n								<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n								<xsl:with-param name=\"value\" select=\"$value\"/>\n							</xsl:call-template>\n						</xsl:if>\n					-->\n					<xsl:if test=\"$renderCmd=\'all\' or $renderCmd=\'input\'\">\n						<xsl:for-each select=\"current()/display/values\">\n							<xsl:variable name=\"title\">\n								<xsl:choose>\n									<xsl:when test=\"@title\">\n										<xsl:value-of select=\"@title\"/>\n									</xsl:when>\n									<xsl:otherwise>\n										<xsl:value-of select=\"@name\"/>\n									</xsl:otherwise>\n								</xsl:choose>\n							</xsl:variable>\n							<xsl:variable name=\"optionName\">\n								<xsl:value-of select=\"../../@name\"/>\n							</xsl:variable>\n							<xsl:variable name=\"checked\">\n								<xsl:choose>\n									<xsl:when test=\"$hasUserValue\">\n<xsl:value-of select=\"//edlContent/data/version[@current=\'true\']/field[@name=current()/../../@name and value=current()] = .\"/>\n</xsl:when>\n									<!-- use the default if no user values are specified -->\n									<xsl:when test=\". = ../../value\">true</xsl:when>\n									<xsl:otherwise>false</xsl:otherwise>\n								</xsl:choose>\n							</xsl:variable>\n							<xsl:if test=\"($globalReadOnly = \'true\'  or $readOnly = \'true\') and $checked = \'true\' \">\n								<xsl:call-template name=\"hidden_input\">			\n									<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n									<xsl:with-param name=\"value\" select=\".\"/>\n								</xsl:call-template>\n							</xsl:if>\n		  				<input name=\"{$optionName}\" type=\"{../type}\" value=\"{.}\">\n							<xsl:if test=\"$customFunction\">\n							  <xsl:variable name=\"customFunction_val\" select=\"$customFunction\"/>\n							  <xsl:attribute name=\"onClick\">\n							    <xsl:value-of select=\"$customFunction\"/>\n							  </xsl:attribute>\n							</xsl:if>\n								<xsl:if test=\"$globalReadOnly = \'true\'  or $readOnly = \'true\'\">\n									<xsl:attribute name=\"disabled\">disabled</xsl:attribute>\n								</xsl:if>\n								<xsl:if test=\"$checked = \'true\'\">\n									<xsl:attribute name=\"checked\">checked</xsl:attribute>\n								</xsl:if>\n							</input>\n							<xsl:value-of select=\"$title\"/>\n							<xsl:if test=\"$align =\'horizontal\'\">\n								<xsl:text>           </xsl:text>\n							</xsl:if>\n							<xsl:if test=\"$align=\'vertical\'\">\n								<br/>\n							</xsl:if>\n						</xsl:for-each>\n					</xsl:if>\n				</xsl:template>\n				\n				<xsl:template name=\"select_input\">\n					<xsl:param name=\"fieldName\"/>\n					<xsl:param name=\"renderCmd\"/>\n					<xsl:param name=\"align\"/>\n					<xsl:param name=\"hasUserValue\"/>\n					<xsl:param name=\"value\"/>\n					<xsl:param name=\"readOnly\"/>\n					<xsl:param name=\"refreshPage\"/>\n					<xsl:param name=\"customFunction\"/>\n					<xsl:if test=\"$renderCmd=\'title\' or $renderCmd=\'all\'\">\n						<xsl:value-of select=\"current()/@title\"/>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'all\'\">\n						<xsl:choose>\n							<xsl:when test=\"$align=\'horizontal\'\">\n								<xsl:text>       </xsl:text>\n							</xsl:when>\n							<xsl:otherwise>\n								<br/>\n							</xsl:otherwise>\n						</xsl:choose>\n					</xsl:if>\n					<xsl:if test=\"$globalReadOnly = \'true\' or $readOnly = \'true\'\">\n						<xsl:call-template name=\"hidden_input\">\n							<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n							<xsl:with-param name=\"value\" select=\"$value\"/>\n						</xsl:call-template>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'input\' or $renderCmd=\'all\'\">\n						<select name=\"{$fieldName}\">\n							<xsl:if test=\"$customFunction\">\n							  <xsl:variable name=\"customFunction_val\" select=\"$customFunction\"/>\n							  <xsl:attribute name=\"onChange\">\n							    <xsl:value-of select=\"$customFunction\"/>\n							  </xsl:attribute>\n							</xsl:if>\n							<xsl:if test=\"$globalReadOnly = \'true\'  or $readOnly = \'true\'\">\n								<xsl:attribute name=\"disabled\">disabled</xsl:attribute>\n							</xsl:if>\n							<xsl:for-each select=\"current()/display/values\">\n								<xsl:variable name=\"title\">\n									<xsl:choose>\n										<xsl:when test=\"@title\">\n											<xsl:value-of select=\"@title\"/>\n										</xsl:when>\n										<xsl:when test=\"@name\">\n											<xsl:value-of select=\"@name\"/>\n										</xsl:when>\n										<xsl:otherwise>\n											<xsl:value-of select=\".\"/>\n										</xsl:otherwise>\n									</xsl:choose>\n								</xsl:variable>\n								<option title=\"{$title}\" value=\"{.}\">\n									<xsl:choose>\n										<xsl:when test=\"$hasUserValue\">\n											<xsl:if test=\"//edlContent/data/version[@current=\'true\']/field[@name=current()/../../@name and value=current()]\">\n												<!-- <xsl:if test=\"$value = current()\"> -->\n												<xsl:attribute name=\"selected\">selected</xsl:attribute>\n											</xsl:if>\n										</xsl:when>\n										<xsl:otherwise>\n											<!-- use the default if no user values are specified -->\n											<xsl:if test=\". = ../../value\">\n												<xsl:attribute name=\"selected\">selected</xsl:attribute>\n											</xsl:if>\n										</xsl:otherwise>\n									</xsl:choose>\n									<xsl:if test=\". = ../../value\">\n										<xsl:attribute name=\"selected\">selected</xsl:attribute>\n									</xsl:if>\n									<xsl:value-of select=\"$title\"/>\n								</option>\n							</xsl:for-each>\n						</select>\n						<xsl:if test=\"$refreshPage = \'true\'\">\n						  <script type=\"text/javascript\">\n						  	// register additional onchange event, use prototype to hide the main form and show a message so as to prevent changes while refreshing. \n						  	// programmers are to create the following divisions; html div; that wrap the main form and a seperate div wrapping the message that will show.\n							register_onchange(\'<xsl:value-of select=\"$fieldName\"/>\', function() { $(\'mainform-div\').hide(); $(\'refresh-message\').show(); document.forms[0].submit(); });\n						  </script>\n						</xsl:if>\n					</xsl:if>\n				</xsl:template>\n				\n				<xsl:template name=\"textarea_input\">\n					<xsl:param name=\"fieldName\"/>\n					<xsl:param name=\"renderCmd\"/>\n					<xsl:param name=\"align\"/>\n					<xsl:param name=\"value\"/>\n					<xsl:param name=\"regex\"/>\n					<xsl:param name=\"message\"/>\n					<xsl:param name=\"validation_required\"/>\n					<xsl:param name=\"readOnly\"/>\n					<xsl:param name=\"customFunction\"/>\n					<xsl:if test=\"$renderCmd=\'title\' or $renderCmd=\'all\'\">\n						<xsl:value-of select=\"current()/@title\"/>\n					</xsl:if>\n					<xsl:if test=\"$globalReadOnly = \'true\' or $readOnly = \'true\'\">\n						<xsl:call-template name=\"hidden_input\">\n							<xsl:with-param name=\"fieldName\" select=\"$fieldName\"/>\n							<xsl:with-param name=\"value\" select=\"$value\"/>\n						</xsl:call-template>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'all\'\">\n						<xsl:choose>\n							<xsl:when test=\"$align=\'horizontal\'\">\n								<xsl:text>       </xsl:text>\n							</xsl:when>\n							<xsl:otherwise>\n								<br/>\n							</xsl:otherwise>\n						</xsl:choose>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'input\' or $renderCmd=\'all\'\">\n						<xsl:variable name=\"metaCols\" select=\"display/meta[name=\'cols\']/value\"/>\n						<xsl:variable name=\"cols\">\n							<xsl:choose>\n								<xsl:when test=\"$metaCols\">\n									<xsl:value-of select=\"$metaCols\"/>\n								</xsl:when>\n								<xsl:otherwise>1</xsl:otherwise>\n							</xsl:choose>\n						</xsl:variable>\n						<xsl:variable name=\"metaRows\" select=\"display/meta[name=\'rows\']/value\"/>\n						<xsl:variable name=\"rows\">\n							<xsl:choose>\n								<xsl:when test=\"$metaRows\">\n									<xsl:value-of select=\"$metaRows\"/>\n								</xsl:when>\n								<xsl:otherwise>1</xsl:otherwise>\n							</xsl:choose>\n						</xsl:variable>\n						<textarea cols=\"{$cols}\" name=\"{@name}\" rows=\"{$rows}\">\n							<xsl:if test=\"$customFunction\">\n							  <xsl:variable name=\"customFunction_val\" select=\"$customFunction\"/>\n							  <xsl:attribute name=\"onkeyup\">\n							    <xsl:value-of select=\"$customFunction\"/>\n							  </xsl:attribute>\n							</xsl:if>\n							<xsl:if test=\"$globalReadOnly = \'true\'  or $readOnly = \'true\'\">\n								<xsl:attribute name=\"disabled\">disabled</xsl:attribute>\n							</xsl:if>\n							<!--\n								force a space if value is empty, or browsers (firefox) set the rest of the literal body content as the value\n								if the tag is a short-form close tag (!) \n							-->\n							<xsl:choose>\n								<xsl:when test=\"string-length($value) &gt; 0\">\n									<xsl:value-of select=\"$value\"/>\n								</xsl:when>\n								<xsl:otherwise>\n									<xsl:text/>\n								</xsl:otherwise>\n							</xsl:choose>\n						</textarea>\n					</xsl:if>\n				</xsl:template>\n	\n				<xsl:template name=\"button_input\">\n					<xsl:param name=\"fieldName\"/>\n					<xsl:param name=\"renderCmd\"/>\n					<xsl:param name=\"align\"/>\n					<xsl:param name=\"customFunction\"/>\n					<xsl:if test=\"$renderCmd=\'title\' or $renderCmd=\'all\'\">\n						<xsl:value-of select=\"current()/@title\"/>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'all\'\">\n						<xsl:choose>\n							<xsl:when test=\"$align=\'horizontal\'\">\n								<xsl:text>    </xsl:text>\n							</xsl:when>\n							<xsl:otherwise>\n								<br/>\n							</xsl:otherwise>\n						</xsl:choose>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'input\' or $renderCmd=\'all\'\">\n						<button name=\"{$fieldName}\">\n							<xsl:variable name=\"value\" select=\"value\"/>\n							<xsl:if test=\"$value\">\n								<xsl:attribute name=\"value\">\n<xsl:value-of select=\"$value\"/>\n</xsl:attribute>\n							</xsl:if>\n							<xsl:for-each select=\"current()/display/meta\">\n								<xsl:variable name=\"attr_name\">\n									<xsl:value-of select=\"name\"/>\n								</xsl:variable>\n								<xsl:variable name=\"attr_value\">\n									<xsl:value-of select=\"value\"/>\n								</xsl:variable>\n								<xsl:attribute name=\"{$attr_name}\">\n<xsl:value-of select=\"$attr_value\"/>\n</xsl:attribute>\n							</xsl:for-each>\n							<xsl:value-of select=\"$value\"/>\n						</button>\n					</xsl:if>\n				</xsl:template>\n\n				<xsl:template name=\"submitbutton_input\">\n					<xsl:param name=\"fieldName\"/>\n					<xsl:param name=\"renderCmd\"/>\n					<xsl:param name=\"align\"/>\n					<xsl:param name=\"customFunction\"/>\n					<xsl:if test=\"$renderCmd=\'title\' or $renderCmd=\'all\'\">\n						<xsl:value-of select=\"current()/@title\"/>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'all\'\">\n						<xsl:choose>\n							<xsl:when test=\"$align=\'horizontal\'\">\n								<xsl:text>    </xsl:text>\n							</xsl:when>\n							<xsl:otherwise>\n								<br/>\n							</xsl:otherwise>\n						</xsl:choose>\n					</xsl:if>\n					<xsl:if test=\"$renderCmd=\'input\' or $renderCmd=\'all\'\">\n						<input name=\"{$fieldName}\" type=\"submit\">\n							<xsl:variable name=\"value\" select=\"value\"/>\n							<xsl:if test=\"$value\">\n								<xsl:attribute name=\"value\">\n<xsl:value-of select=\"$value\"/>\n</xsl:attribute>\n							</xsl:if>\n							<xsl:for-each select=\"current()/display/meta\">\n								<xsl:variable name=\"attr_name\">\n									<xsl:value-of select=\"name\"/>\n								</xsl:variable>\n								<xsl:variable name=\"attr_value\">\n									<xsl:value-of select=\"value\"/>\n								</xsl:variable>\n								<xsl:attribute name=\"{$attr_name}\">\n<xsl:value-of select=\"$attr_value\"/>\n</xsl:attribute>\n							</xsl:for-each>\n						</input>\n					</xsl:if>\n				</xsl:template>\n				\n				<xsl:template name=\"hidden_input\">\n					<xsl:param name=\"fieldName\"/>\n					<xsl:param name=\"value\"/>\n					<xsl:variable name=\"finalValue\">\n					  <xsl:choose>\n					    <xsl:when test=\"$value\">\n					      <xsl:value-of select=\"$value\"/>\n					    </xsl:when>\n					    <xsl:otherwise>\n						  <xsl:value-of select=\"//edlContent/data/version[@current=\'true\']/field[@name=string($fieldName)]/value\"/>\n						</xsl:otherwise>\n					  </xsl:choose>\n					</xsl:variable>\n					<input name=\"{$fieldName}\" type=\"hidden\" value=\"{$finalValue}\"/>\n					<!-- <xsl:comment>\n					XPath: //edlContent/data/version[@current=\'true\']/field[@name={$fieldName}]/value\n					Escaped: <xsl:value-of select=\"my-class:escapeForXPath($fieldName)\"/>\n					What\'s my value? <xsl:value-of select=\"//edlContent/data/version[@current=\'true\']/field[@name=$fieldName]/value\"/>\n					What\'s my value2? <xsl:value-of select=\"//edlContent/data/version[@current=\'true\']/field[@name=my-class:escapeForXPath($fieldName)]/value\"/>\n					</xsl:comment> -->\n					\n				</xsl:template>\n				\n				<xsl:template name=\"page_button\">\n					<xsl:param name=\"pageName\"/>\n					<xsl:param name=\"value\"/>\n					<xsl:param name=\"readOnly\"/>\n					<xsl:param name=\"clickfunction\"/>\n					<xsl:param name=\"use_jsButton\"/>\n					<xsl:variable name=\"clickFunctionVal\" select=\"boolean(normalize-space($clickfunction))\"/>\n					<xsl:choose>\n						<xsl:when test=\"$readOnly=\'true\'\">\n						  <input disabled=\"disabled\" name=\"edl.gotoPage:{$pageName}\" type=\"submit\" value=\"{$value}\"/>\n						</xsl:when>\n						<xsl:when test=\"$clickFunctionVal\">\n						  <xsl:choose>\n							<xsl:when test=\"$use_jsButton = \'true\'\">\n								<input name=\"jsButton\" onClick=\"{$clickfunction}\" type=\"submit\" value=\"{$value}\"/>\n							</xsl:when>\n							<xsl:otherwise>\n								<input name=\"edl.gotoPage:{$pageName}\" onClick=\"{$clickfunction}\" type=\"submit\" value=\"{$value}\"/>\n							</xsl:otherwise>\n						  </xsl:choose>\n						</xsl:when>\n						<xsl:otherwise>\n						  <input name=\"edl.gotoPage:{$pageName}\" type=\"submit\" value=\"{$value}\"/>\n						</xsl:otherwise>\n					</xsl:choose>\n				</xsl:template>				\n				\n				<xsl:template name=\"header\">\n					<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"headertable\" width=\"100%\">\n						<tr>\n							<td align=\"left\" valign=\"top\" width=\"10%\">\n								<img alt=\"OneStart Workflow\" height=\"21\" hspace=\"5\" src=\"images/wf-logo.gif\" vspace=\"5\" width=\"150\"/>\n							</td>\n							<td align=\"right\">\n								<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n									<tr>\n										<td align=\"right\" class=\"thnormal\">Document Type Name:</td>\n										<td align=\"left\" class=\"datacell1\">\n											<xsl:value-of select=\"/documentContent/documentState/docType\"/>\n										</td>\n									</tr>\n									<tr>\n										<td align=\"right\" class=\"thnormal\">Document Status:</td>\n										<td align=\"left\" class=\"datacell1\" width=\"50\">\n											<xsl:value-of select=\"//documentState/workflowDocumentState/status\"/>\n										</td>\n									</tr>\n									<tr>\n										<td align=\"right\" class=\"thnormal\">Create Date:</td>\n										<td align=\"left\" class=\"datacell1\">\n											<xsl:comment>[transient start]</xsl:comment>\n											<xsl:value-of select=\"//documentState/workflowDocumentState/createDate\"/>\n											<xsl:comment>[transient end]</xsl:comment>\n										</td>\n									</tr>\n									<tr>\n										<td align=\"right\" class=\"thnormal\">Document ID:</td>\n										<td align=\"left\" class=\"datacell1\">\n												<xsl:comment>[transient start]</xsl:comment>\n												<xsl:value-of select=\"/documentContent/documentState/docId\"/>\n												<xsl:comment>[transient end]</xsl:comment>\n										</td>\n									</tr>\n								</table>\n							</td>\n						</tr>\n					</table>\n				</xsl:template>\n	\n				<xsl:template name=\"htmlHead\">\n					<!-- whether the FIELDS can be edited -->\n					<!-- <xsl:variable name=\"globalReadOnly\" select=\"/documentContent/documentState/editable != \'true\'\"/>-->\n					<!-- whether the form can be acted upon -->\n					<xsl:variable name=\"actionable\" select=\"/documentContent/documentState/actionable = \'true\'\"/>\n					<xsl:variable name=\"docId\" select=\"/documentContent/documentState/docId\"/>\n					<xsl:variable name=\"def\" select=\"/documentContent/documentState/definition\"/>\n					<xsl:variable name=\"docType\" select=\"/documentContent/documentState/docType\"/>\n					<xsl:variable name=\"style\" select=\"/documentContent/documentState/style\"/>\n					<xsl:variable name=\"annotatable\" select=\"/documentContent/documentState/annotatable = \'true\'\"/>\n					<xsl:variable name=\"docTitle\">\n						<xsl:choose>\n							<xsl:when test=\"//edlContent/edl/@title\">\n								<xsl:value-of select=\"//edlContent/edl/@title\"/>\n							</xsl:when>\n							<xsl:otherwise>\n								<xsl:value-of select=\"//edlContent/edl/@name\"/>\n							</xsl:otherwise>\n						</xsl:choose>\n					</xsl:variable>\n					<xsl:variable name=\"pageTitle\">\n						<xsl:choose>\n							<xsl:when test=\"$globalReadOnly = \'true\'\">\n								Viewing\n              </xsl:when>\n							<xsl:otherwise>\n								Editing\n              </xsl:otherwise>\n						</xsl:choose>\n\n\n          </xsl:variable>\n					<title>\n						<xsl:value-of select=\"$pageTitle\"/> Document\n					</title>\n					<xsl:comment>* Meta data block for automation/testing</xsl:comment>\n					<xsl:comment>* 	 [var editable_value=<xsl:value-of select=\"//documentState/editable\"/>]</xsl:comment>\n					<xsl:comment>* 	 [var annotatable_value=<xsl:value-of select=\"//documentState/annotatable\"/>]</xsl:comment>\n					<xsl:comment>* 	 [var globalReadOnly=<xsl:value-of select=\"$globalReadOnly\"/>]</xsl:comment>\n					<xsl:comment>* 	 [var annotatable=<xsl:value-of select=\"$annotatable\"/>]</xsl:comment>\n					<xsl:comment>* 	 [var annotation=<xsl:value-of select=\"//edlContent/data/version[@current=\'true\']/annotation\"/>]</xsl:comment>\n					<xsl:comment>* 	 [transient start]</xsl:comment>\n					<xsl:comment>* 	 [var docid=<xsl:value-of select=\"$docId\"/>]</xsl:comment>\n					<xsl:comment>* 	 [transient end]</xsl:comment>\n					<xsl:comment>* 	 [var doctype=<xsl:value-of select=\"$docType\"/>]</xsl:comment>\n					<xsl:comment>* 	 [var def=<xsl:value-of select=\"$def\"/>]</xsl:comment>\n					<xsl:comment>* 	 [var style=<xsl:value-of select=\"$style\"/>]</xsl:comment>\n					<link href=\"css/screen.css\" rel=\"stylesheet\" type=\"text/css\"/>\n					<link href=\"css/edoclite1.css\" rel=\"stylesheet\" type=\"text/css\"/>\n					<script src=\"scripts/edoclite1.js\" type=\"text/javascript\"/>\n					<script src=\"scripts/prototype.js\" type=\"text/javascript\"/>				\n					<xsl:if test=\"//edlContent/edl/javascript\">\n						<script type=\"text/javascript\">\n							<xsl:value-of select=\"//edlContent/edl/javascript\"/>\n						</script>\n					</xsl:if>\n				</xsl:template>\n\n				<xsl:template name=\"instructions\">\n					<!-- <xsl:variable name=\"globalReadOnly\" select=\"/documentContent/documentState/editable != \'true\'\"/> -->\n					<xsl:variable name=\"docType\" select=\"/documentContent/documentState/docType\"/>\n					<xsl:variable name=\"docTitle\">\n						<xsl:choose>\n							<xsl:when test=\"//edlContent/edl/@title\">\n								<xsl:value-of select=\"//edlContent/edl/@title\"/>\n							</xsl:when>\n							<xsl:otherwise>\n								<xsl:value-of select=\"//edlContent/edl/@name\"/>\n							</xsl:otherwise>\n						</xsl:choose>\n					</xsl:variable>\n					<xsl:variable name=\"instructions\">\n						<xsl:choose>\n							<xsl:when test=\"//edlContent/edl/instructions\">\n								<xsl:value-of select=\"//edlContent/edl/instructions\"/>\n							</xsl:when>\n							<xsl:otherwise>\n\n								Reviewing Document\n							</xsl:otherwise>\n						</xsl:choose>\n					</xsl:variable>\n					<xsl:variable name=\"createInstructions\">\n						<xsl:choose>\n							<xsl:when test=\"//edlContent/edl/createInstructions\">\n								<xsl:value-of select=\"//edlContent/edl/createInstructions\"/>\n							</xsl:when>\n							<xsl:otherwise>\n\n								Filling out new Document\n							</xsl:otherwise>\n						</xsl:choose>\n					</xsl:variable>\n					<xsl:variable name=\"pageTitle\">\n						<xsl:choose>\n							<xsl:when test=\"$globalReadOnly = \'true\'\">\n								Viewing\n							</xsl:when>\n							<xsl:otherwise>\n								Editing \n							</xsl:otherwise>\n						</xsl:choose>\n\n\n						Document\n					</xsl:variable>\n					<table align=\"center\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" width=\"80%\">\n						<tr>\n							<td>\n								<strong>\n									<xsl:value-of select=\"$pageTitle\"/>\n								</strong>\n							</td>\n						</tr>\n						<tr>\n							<td>\n								<!-- if \'save\' action is present then this is a \"new\" document that has not been routed, and therefore we should display the create instructions -->\n								<xsl:choose>\n									<xsl:when test=\"//documentState/actionsPossible/save\">\n										<xsl:value-of select=\"$createInstructions\"/>\n									</xsl:when>\n									<xsl:otherwise>\n										<xsl:value-of select=\"$instructions\"/>\n									</xsl:otherwise>\n								</xsl:choose>\n							</td>\n						</tr>\n					</table>\n				</xsl:template>\n	\n				<xsl:template name=\"errors\">\n					<!--\n						<style type=\"text/css\">\n							.error-message {\n    						color: red;\n    						text-align: center;\n							}\n						</style> \n					-->\n					<table align=\"center\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" width=\"80%\">\n						<xsl:for-each select=\"//documentState/error\">\n							<tr>\n								<td>\n									<div class=\"error-message\">\n										<xsl:value-of select=\".\"/>\n									</div>\n								</td>\n							</tr>\n						</xsl:for-each>\n					</table>\n				</xsl:template>\n\n				<xsl:template name=\"footer\">\n					<xsl:if test=\"//documentState/userSession/backdoorUser\">\n						<center>\n							User\n							<xsl:choose>\n								<xsl:when test=\"//documentState/userSession/loggedInUser/displayName\">\n									<xsl:value-of select=\"//documentState/userSession/loggedInUser/displayName\"/>\n								</xsl:when>\n								<xsl:when test=\"//documentState/userSession/loggedInUser/networkId\">\n									<xsl:value-of select=\"//documentState/userSession/loggedInUser/networkId\"/>\n								</xsl:when>\n								<xsl:otherwise>\n									??Unknown user??\n								</xsl:otherwise>\n							</xsl:choose>\n							standing in for user\n							<xsl:choose>\n								<xsl:when test=\"//documentState/userSession/backdoorUser/backdoorDisplayName\">\n									<xsl:value-of select=\"//documentState/userSession/backdoorUser/backdoorDisplayName\"/>\n								</xsl:when>\n								<xsl:when test=\"//documentState/userSession/backdoorUser/backdoorNetworkId\">\n									<xsl:value-of select=\"//documentState/userSession/backdoorUser/backdoorNetworkId\"/>\n								</xsl:when>\n								<xsl:otherwise>\n									??Unknown user??\n								</xsl:otherwise>\n							</xsl:choose>\n						</center>\n					</xsl:if>\n				</xsl:template>\n\n				<xsl:template name=\"hidden-params\">\n					<xsl:comment>* Hide this nastiness so we can concentrate on formating above</xsl:comment>\n					<xsl:variable name=\"docId\" select=\"/documentContent/documentState/docId\"/>\n					<xsl:variable name=\"def\" select=\"/documentContent/documentState/definition\"/>\n					<xsl:variable name=\"docType\" select=\"/documentContent/documentState/docType\"/>\n					<xsl:variable name=\"style\" select=\"/documentContent/documentState/style\"/>\n					<xsl:variable name=\"incrementVersion\" select=\"//edlContent/data/version[@current=\'true\']/incrementVersion\"/>\n					<xsl:variable name=\"currentPage\" select=\"//currentPage\"/>\n					<xsl:variable name=\"previousPage\" select=\"//previousPage\"/>\n					<div style=\"display: none\">\n						<xsl:if test=\"$incrementVersion = \'true\'\">\n							<input name=\"incrementVersion\" type=\"hidden\" value=\"{$incrementVersion}\"/>\n						</xsl:if>\n						<xsl:choose>\n							<xsl:when test=\"$docId\">\n								<!-- preserve the data for comparison without transient value -->\n								<xsl:comment>* input name=\"docId\" type=\"hidden\"</xsl:comment>\n								<!-- mark the entire input element transient because we can\'t insert comments in the middle of a tag just to omit a certain attribute -->\n								<xsl:comment>[transient start]</xsl:comment>\n								<input name=\"docId\" type=\"hidden\" value=\"{$docId}\"/>\n								<xsl:comment>[transient end]</xsl:comment>\n							</xsl:when>\n							<xsl:otherwise>\n								<xsl:if test=\"$docType\">\n									<input name=\"docType\" type=\"hidden\" value=\"{$docType}\"/>\n								</xsl:if>\n								<xsl:if test=\"$def\">\n									<input name=\"def\" type=\"hidden\" value=\"{$def}\"/>\n								</xsl:if>\n								<xsl:if test=\"$style\">\n									<input name=\"style\" type=\"hidden\" value=\"{$style}\"/>\n								</xsl:if>\n							</xsl:otherwise>\n						</xsl:choose>\n						<xsl:if test=\"$currentPage\">\n						  <input name=\"edl.currentPage\" type=\"hidden\" value=\"{$currentPage}\"/>\n						</xsl:if>\n						<xsl:if test=\"$previousPage\">\n						  <input name=\"edl.previousPage\" type=\"hidden\" value=\"{$previousPage}\"/>\n						</xsl:if>\n					</div>\n				</xsl:template>\n\n				<xsl:template name=\"annotation\">\n					<xsl:variable name=\"annotation\" select=\"//edlContent/data/version[@current=\'true\']/annotation\"/>\n					<xsl:variable name=\"currentAnnotation\" select=\"//edlContent/data/version[@current=\'true\']/currentAnnotation\"/>\n					<xsl:variable name=\"annotatable\" select=\"/documentContent/documentState/annotatable = \'true\'\"/>\n					<xsl:if test=\"$annotatable or $annotation or $currentAnnotation\">\n						<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"bord-r-t\" width=\"80%\">\n							<tr>\n								<td align=\"center\" class=\"thnormal\" colspan=\"2\">\n									<xsl:if test=\"$annotation\">\n										<div>\n<h4>Annotations</h4>\n											<xsl:for-each select=\"//edlContent/data/version[@current=\'true\']/annotation\">\n												<div>\n<xsl:value-of select=\".\"/>\n</div>\n											</xsl:for-each>\n										</div>\n										<br/>\n									</xsl:if>\n									<xsl:if test=\"$annotatable\">\n										Set annotation:<br/>\n										<textarea name=\"annotation\">\n											<xsl:value-of select=\"$currentAnnotation\"/>\n										</textarea>\n									</xsl:if>\n								</td>\n							</tr>\n						</table>\n					</xsl:if>\n				</xsl:template>\n\n				<xsl:template name=\"buttons\">\n					<xsl:param name=\"fname\"/>\n					<xsl:param name=\"showRTP\"/>\n					<xsl:variable name=\"functionName\" select=\"$fname\"/>\n					<xsl:variable name=\"fxname\" select=\"boolean(normalize-space($fname))\"/>\n					<xsl:variable name=\"actionable\" select=\"/documentContent/documentState/actionable = \'true\'\"/>\n					<xsl:variable name=\"apos\" select=\"&quot;\'&quot;\"/>					\n					<xsl:variable name=\"showRTPbutton\" select=\"$showRTP\"/>					\n					<xsl:if test=\"//documentState/actionsPossible/*\">\n						<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"bord-r-t\" width=\"80%\">\n							<tr>\n								<td align=\"center\" class=\"thnormal\" colspan=\"2\">\n									<xsl:text>									</xsl:text>\n										<xsl:for-each select=\"//documentState/actionsPossible/*[. != \'returnToPrevious\']\">\n											<xsl:variable name=\"actionTitle\">\n												<xsl:choose>\n													<xsl:when test=\"@title\">\n														<xsl:value-of select=\"@title\"/>\n													</xsl:when>\n													<xsl:otherwise>\n														<xsl:value-of select=\"local-name()\"/>\n													</xsl:otherwise>\n												</xsl:choose>\n											</xsl:variable>\n										<xsl:if test=\"local-name() != \'returnToPrevious\' or local-name() = \'returnToPrevious\' and not($showRTPbutton = \'false\')\">\n											<input name=\"userAction\" title=\"{$actionTitle}\" type=\"submit\">\n												<xsl:if test=\"not($actionable)\">\n													<xsl:attribute name=\"disabled\">disabled</xsl:attribute>\n												</xsl:if>												\n											 <xsl:choose>\n												<xsl:when test=\"$fxname\">\n												  <xsl:attribute name=\"onclick\">\n													  <xsl:value-of select=\"\'buttonClick(\'\"/>\n													  <xsl:value-of select=\"$apos\"/>\n													  <xsl:value-of select=\"$actionTitle\"/>\n													  <xsl:value-of select=\"$apos\"/>\n													  <xsl:value-of select=\"\'); \'\"/>\n													  <xsl:value-of select=\"\'buttonClickFunctionName(\'\"/>\n													  <xsl:value-of select=\"$functionName\"/>\n													  <xsl:value-of select=\"\')\'\"/>\n													</xsl:attribute>\n												</xsl:when>\n												<xsl:otherwise>\n													<xsl:attribute name=\"onclick\">\n													  <xsl:value-of select=\"\'buttonClick(\'\"/>\n													  <xsl:value-of select=\"$apos\"/>\n													  <xsl:value-of select=\"$actionTitle\"/>\n													  <xsl:value-of select=\"$apos\"/>\n													  <xsl:value-of select=\"\')\'\"/>\n													</xsl:attribute>\n												</xsl:otherwise>\n											  </xsl:choose>\n											  <xsl:choose>\n											    <xsl:when test=\"local-name() = \'route\'\">\n											      <xsl:attribute name=\"value\">\n											        <xsl:value-of select=\"\'submit\'\"/>\n											      </xsl:attribute>\n											    </xsl:when>\n											    <xsl:when test=\"local-name() = \'blanketApprove\'\">\n											      <xsl:attribute name=\"value\">\n											        <xsl:value-of select=\"\'blanket approve\'\"/>\n											      </xsl:attribute>\n											    </xsl:when>\n											    <xsl:when test=\"local-name() = \'returnToPrevious\'\">\n											      <xsl:attribute name=\"value\">\n											        <xsl:value-of select=\"\'return to previous\'\"/>\n											      </xsl:attribute>\n											    </xsl:when>\n											    <xsl:otherwise>\n											      <xsl:attribute name=\"value\">\n											        <xsl:value-of select=\"local-name()\"/>\n											      </xsl:attribute>\n											    </xsl:otherwise>\n											  </xsl:choose>\n											</input>\n										</xsl:if>\n											<xsl:text>                 					 </xsl:text>\n										</xsl:for-each>\n								\n								<xsl:if test=\"not($showRTPbutton = \'false\')\">\n									<xsl:if test=\"//documentState/actionsPossible/returnToPrevious\">\n										<select name=\"previousNode\">\n											<xsl:if test=\"not($actionable) or $showRTPbutton = \'false\'\">\n												<xsl:attribute name=\"disabled\">disabled</xsl:attribute>\n											</xsl:if>\n											<xsl:for-each select=\"//documentState/previousNodes/node\">\n												<option value=\"{.}\">\n													<xsl:value-of select=\".\"/>\n												</option>\n											</xsl:for-each>\n										</select>\n										<xsl:text>                 					 </xsl:text>\n									</xsl:if>\n								</xsl:if>\n								</td>\n							</tr>\n						</table>\n					</xsl:if>\n				</xsl:template>\n\n				<xsl:template match=\"/\">\n					<xsl:choose>\n						<xsl:when test=\"$overrideMain=\'true\'\">\n							<xsl:call-template name=\"mainForm\"/>\n						</xsl:when>\n						<xsl:otherwise>\n							<html>\n								<head>\n									<xsl:call-template name=\"htmlHead\"/>\n								</head>\n								<body onload=\"onPageLoad()\">\n									<xsl:call-template name=\"header\"/>\n									<xsl:call-template name=\"instructions\"/>\n									<xsl:call-template name=\"errors\"/>\n									<xsl:variable name=\"formTarget\" select=\"\'EDocLite\'\"/>\n									<form accept-charset=\"ISO-8859-1\" action=\"{$formTarget}\" enctype=\"multipart/form-data\" id=\"edoclite\" method=\"post\" onsubmit=\"return validateOnSubmit(this)\">\n										<xsl:call-template name=\"hidden-params\"/>\n										<xsl:call-template name=\"mainBody\"/>\n										<xsl:call-template name=\"annotation\"/>\n										<xsl:call-template name=\"buttons\"/>\n										<br/>\n										<xsl:call-template name=\"notes\"/>\n									</form>\n									<xsl:call-template name=\"footer\"/>\n								</body>\n							</html>\n						</xsl:otherwise>\n					</xsl:choose>\n				</xsl:template>\n\n				<xsl:template name=\"notes\">\n					<xsl:if test=\"//NoteForm\">\n						<xsl:variable name=\"showEdit\" select=\"//NoteForm/showEdit\"/>\n						<xsl:variable name=\"showAdd\" select=\"//NoteForm/showAdd\"/>\n						<input name=\"showEdit\" type=\"hidden\">\n							<xsl:attribute name=\"value\">\n<xsl:value-of select=\"//NoteForm/showEdit\"/>\n</xsl:attribute>\n						</input>\n						<input name=\"showAdd\" type=\"hidden\">\n							<xsl:attribute name=\"value\">\n<xsl:value-of select=\"//NoteForm/showAdd\"/>\n</xsl:attribute>\n						</input>\n						<input name=\"methodToCall\" type=\"hidden\"/>\n						<input name=\"sortNotes\" type=\"hidden\">\n							<xsl:attribute name=\"value\">\n<xsl:value-of select=\"//NoteForm/sortNotes\"/>\n</xsl:attribute>\n						</input>\n						<input name=\"noteIdNumber\" type=\"hidden\">\n							<xsl:attribute name=\"value\">\n<xsl:value-of select=\"//NoteForm/noteIdNumber\"/>\n</xsl:attribute>\n						</input>\n						<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"bord-r-t\" width=\"80%\">\n							<xsl:if test=\"$showAdd = \'true\'\">\n								<tr>\n									<td align=\"center\" class=\"thnormal2\" colspan=\"4\" scope=\"col\">\n										<b>Create Note </b>\n									</td>\n								</tr>\n								<tr>\n									<td class=\"thnormal\" scope=\"col\">\n										<div align=\"center\">Author</div>\n									</td>\n									<td class=\"thnormal\" scope=\"col\">\n										<div align=\"center\">Date</div>\n									</td>\n									<td class=\"thnormal\" scope=\"col\">\n										<div align=\"center\">Note</div>\n									</td>\n									<td class=\"thnormal\" scope=\"col\">\n										<div align=\"center\">Action</div>\n									</td>\n								</tr>\n								<tr valign=\"top\">\n									<td class=\"datacell\">\n										<xsl:if test=\"$globalReadOnly != \'true\'\">\n											<xsl:value-of select=\"//NoteForm/currentUserName\"/>\n										</xsl:if>\n									</td>\n									<td class=\"datacell\">\n										<xsl:if test=\"$globalReadOnly != \'true\'\">\n											<xsl:comment>[transient start]</xsl:comment>\n											<xsl:value-of select=\"//NoteForm/currentDate\"/>\n            				  <xsl:comment>[transient end]</xsl:comment>\n										</xsl:if>\n									</td>\n									<td class=\"datacell\">\n										<xsl:choose>\n											<xsl:when test=\"$showEdit = \'yes\'\">\n												<textarea cols=\"60\" disabled=\"true\" name=\"addText\" rows=\"3\"/>\n												<xsl:if test=\"$showAttachments = \'true\'\">\n													<br/>Attachment:	<input disabled=\"true\" name=\"file\" type=\"file\"/>\n												</xsl:if>\n											</xsl:when>\n											<xsl:otherwise>\n												<textarea cols=\"60\" name=\"addText\" rows=\"3\">\n													<xsl:if test=\"$globalReadOnly = \'true\'\">\n														<xsl:attribute name=\"disabled\">disabled</xsl:attribute>\n													</xsl:if>\n												</textarea>\n												<xsl:if test=\"$showAttachments = \'true\'\">\n													<br/>\n													Attachment:	\n													<input name=\"file\" type=\"file\">\n														<xsl:if test=\"$globalReadOnly = \'true\'\">\n															<xsl:attribute name=\"disabled\">disabled</xsl:attribute>\n														</xsl:if>\n													</input>\n												</xsl:if>\n											</xsl:otherwise>\n										</xsl:choose>\n									</td>\n									<td class=\"datacell\">\n										<xsl:choose>\n											<xsl:when test=\"$showEdit = \'yes\'\">\n												<div align=\"center\">\n													<img height=\"15\" hspace=\"3\" src=\"images/tinybutton-save-disable.gif\" vspace=\"3\" width=\"45\"/>\n												</div>\n											</xsl:when>\n											<xsl:otherwise>\n												<div align=\"center\">\n													<xsl:choose>\n														<xsl:when test=\"$globalReadOnly = \'true\'\">\n															<img height=\"15\" hspace=\"3\" src=\"images/tinybutton-save-disable.gif\" vspace=\"3\" width=\"45\"/>\n														</xsl:when>\n														<xsl:otherwise>\n															<img border=\"0\" height=\"15\" hspace=\"3\" onclick=\"document.forms[0].methodToCall.value=\'save\'; document.forms[0].submit();\" src=\"images/tinybutton-save.gif\" vspace=\"3\" width=\"45\"/>\n														</xsl:otherwise>\n													</xsl:choose>\n												</div>\n											</xsl:otherwise>\n										</xsl:choose>\n									</td>\n								</tr>\n							</xsl:if>\n							<xsl:choose>\n								<xsl:when test=\"//NoteForm/numberOfNotes &gt;0\">\n									<tr>\n										<td align=\"center\" class=\"thnormal2\" colspan=\"4\" scope=\"col\">\n											<b>View Notes </b>\n										</td>\n									</tr>\n									<tr>\n										<td class=\"thnormal\" scope=\"col\">\n											<div align=\"center\">Author</div>\n										</td>\n										<td class=\"thnormal\" scope=\"col\">\n											<div align=\"center\">\n												 <xsl:choose>\n													<xsl:when test=\"$globalReadOnly = \'true\'\">\n														Date\n													</xsl:when>\n													<xsl:otherwise>\n														<a href=\"javascript: document.forms[0].elements[\'methodToCall\'].value = \'sort\'; document.forms[0].elements[\'sortNotes\'].value = \'true\'; document.forms[0].submit();\">Date</a>\n														<img height=\"5\" src=\"images/arrow-expcol-down.gif\" width=\"9\"/>\n													</xsl:otherwise>\n												</xsl:choose>\n											</div>\n										</td>\n										<td class=\"thnormal\" scope=\"col\">\n											<div align=\"center\">Note</div>\n										</td>\n										<td class=\"thnormal\" scope=\"col\">\n											<div align=\"center\">Action</div>\n										</td>\n									</tr>\n									<xsl:for-each select=\"//NoteForm/Notes/Note\">\n										<tr valign=\"top\">\n											<td class=\"datacell\">\n												<xsl:value-of select=\"noteAuthorFullName\"/>\n											</td>\n											<td class=\"datacell\">\n            			      <xsl:comment>[transient start]</xsl:comment>\n												<xsl:value-of select=\"formattedCreateDate\"/>\n              			    <xsl:comment>[transient end]</xsl:comment>\n												<br/>\n                			  <xsl:comment>[transient start]</xsl:comment>\n												<xsl:value-of select=\"formattedCreateTime\"/>\n												<xsl:comment>[transient end]</xsl:comment>\n											</td>\n											<td class=\"datacell\">\n												 <xsl:choose>\n													<xsl:when test=\"editingNote = \'true\' and authorizedToEdit = \'true\'\">\n														<textarea cols=\"60\" name=\"noteText\" rows=\"3\">\n															<xsl:if test=\"$globalReadOnly = \'true\'\">\n																<xsl:attribute name=\"disabled\">disabled</xsl:attribute>\n															</xsl:if>\n															<xsl:value-of select=\"noteText\"/>\n														</textarea>\n														<br/>\n														<xsl:if test=\"$showAttachments = \'true\'\">\n															<xsl:choose>\n																<xsl:when test=\"attachments/attachment\">\n																	<xsl:for-each select=\"attachments/attachment\">\n																		<xsl:value-of select=\"fileName\"/>   \n																		<input name=\"idInEdit\" type=\"hidden\">\n																			<xsl:attribute name=\"value\">\n<xsl:value-of select=\"../../noteId\"/>\n</xsl:attribute>\n																		</input>\n																		<xsl:choose>\n																			<xsl:when test=\"$globalReadOnly = \'true\'\">\n																			</xsl:when>\n																			<xsl:otherwise>\n																				<a href=\"javascript: document.forms[0].elements[\'methodToCall\'].value = \'deleteAttachment\'; document.forms[0].submit();\">delete</a>  \n	                    									<xsl:variable name=\"hrefStr\">attachment?attachmentId=<xsl:value-of select=\"attachmentId\"/>\n</xsl:variable>\n																				<a href=\"{$hrefStr}\">download</a>\n	                     								</xsl:otherwise>\n	                     							</xsl:choose>\n																	</xsl:for-each>\n																</xsl:when>\n																<xsl:otherwise>\n																	<br/>\n																	Attachment:	\n																	<input name=\"file\" type=\"file\">\n																		<xsl:if test=\"$globalReadOnly = \'true\'\">\n																			<xsl:attribute name=\"disabled\">disabled</xsl:attribute>\n																		</xsl:if>\n																	</input>\n																</xsl:otherwise>\n															</xsl:choose>\n														</xsl:if>\n													</xsl:when>\n													<xsl:otherwise>\n														<xsl:value-of select=\"noteText\"/>\n														<br/>\n														<br/>\n														<xsl:if test=\"$showAttachments = \'true\'\">\n															<xsl:for-each select=\"attachments/attachment\">\n																<xsl:value-of select=\"fileName\"/>   \n	                    					<xsl:variable name=\"hrefStr\">attachment?attachmentId=<xsl:value-of select=\"attachmentId\"/>\n</xsl:variable>\n																<a href=\"{$hrefStr}\">download</a>\n															</xsl:for-each>\n														</xsl:if>\n													</xsl:otherwise>\n												</xsl:choose>\n											</td>\n											<td class=\"datacell\">\n												<xsl:choose>\n													<xsl:when test=\"editingNote = \'true\' and authorizedToEdit = \'true\' and $globalReadOnly != \'true\'\">\n														<div align=\"center\">\n															<img border=\"0\" height=\"15\" hspace=\"3\" src=\"images/tinybutton-save.gif\" vspace=\"3\" width=\"40\">\n																<xsl:attribute name=\"onclick\">document.forms[0].elements[\'methodToCall\'].value = \'save\';\n																	document.forms[0].elements[\'noteIdNumber\'].value = <xsl:value-of select=\"noteId\"/>;\n																	document.forms[0].submit();\n																</xsl:attribute>\n															</img>\n															<img border=\"0\" height=\"15\" hspace=\"3\" onclick=\"document.forms[0].elements[\'methodToCall\'].value = \'cancel\'; document.forms[0].submit();\" src=\"images/tinybutton-cancel.gif\" vspace=\"3\" width=\"40\"/>\n														</div>\n													</xsl:when>\n													<xsl:otherwise>\n														<xsl:choose>\n															<xsl:when test=\"../../showEdit != \'yes\' and authorizedToEdit = \'true\' and $globalReadOnly !=\'true\'\">\n																<div align=\"center\">\n																	<img border=\"0\" height=\"15\" hspace=\"3\" src=\"images/tinybutton-edit1.gif\" vspace=\"3\" width=\"40\">\n																		<xsl:attribute name=\"onclick\">document.forms[0].elements[\'methodToCall\'].value = \'edit\';\n																			document.forms[0].elements[\'noteIdNumber\'].value = <xsl:value-of select=\"noteId\"/>;\n																			document.forms[0].submit();\n																		</xsl:attribute>\n																	</img>\n																	<img border=\"0\" height=\"15\" hspace=\"3\" src=\"images/tinybutton-delete1.gif\" vspace=\"3\" width=\"40\">\n																		<xsl:attribute name=\"onclick\">document.forms[0].elements[\'methodToCall\'].value = \'delete\';\n																			document.forms[0].elements[\'noteIdNumber\'].value = <xsl:value-of select=\"noteId\"/>;\n																			document.forms[0].submit();\n																		</xsl:attribute>\n																	</img>\n																</div>\n															</xsl:when>\n															<xsl:otherwise>\n																<div align=\"center\">\n																	<img height=\"15\" hspace=\"3\" src=\"images/tinybutton-edit1-disable.gif\" vspace=\"3\" width=\"40\"/>\n																	<img height=\"15\" src=\"images/tinybutton-delete1-disabled.gif\" vspace=\"3\" width=\"40\"/>\n																</div>\n															</xsl:otherwise>\n														</xsl:choose>\n													</xsl:otherwise>\n												</xsl:choose>\n											</td>\n										</tr>\n									</xsl:for-each>\n								</xsl:when>\n								<xsl:otherwise>\n									<xsl:if test=\"//NoteForm/showAdd != \'true\'\">\n										<tr>\n											<td class=\"thnormal2\">\n												<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" height=\"100%\" width=\"100%\">\n													<tbody>\n														<tr>\n															<td align=\"center\" class=\"spacercell\" valign=\"middle\">\n																<div align=\"center\">\n																	<br/>\n																	<br/>\n																	<br/>\n																	<p>No notes available </p>\n																	<xsl:if test=\"//NoteForm/authorizedToAdd = \'true\'\">\n																		<p>\n																			<img border=\"0\" height=\"15\" hspace=\"3\" onclick=\"document.forms[0].elements[\'methodToCall\'].value = \'add\'; document.forms[0].submit();\" src=\"images/tinybutton-addnote.gif\" vspace=\"3\" width=\"66\"/>\n																		</p>\n																	</xsl:if>\n																</div>\n															</td>\n														</tr>\n													</tbody>\n												</table>\n											</td>\n										</tr>\n									</xsl:if>\n								</xsl:otherwise> \n							</xsl:choose> \n						</table>\n					</xsl:if>\n				</xsl:template> \n                <xsl:template name=\"lookup\">\n                  <xsl:param name=\"fieldName\"/>\n                  <xsl:param name=\"readOnly\"/>\n                  <xsl:if test=\"$globalReadOnly != \'true\' and $readOnly != \'true\'\">\n                    <xsl:if test=\"//fieldDef[@name=$fieldName]/lookup\">\n                      <input name=\"userAction.performLookup.{$fieldName}\" onclick=\"buttonClick(\'performLookup\');\" src=\"images/searchicon.gif\" type=\"image\" value=\"performLookup.{$fieldName}\"/>\n                    </xsl:if>\n                  </xsl:if>\n                </xsl:template>\n			</xsl:stylesheet>\n',1,1,'78f41de9-d148-4e84-855c-b3359f726650');
/*!40000 ALTER TABLE `krcr_style_t` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `krms_prop_parm_t`
--

DROP TABLE IF EXISTS `krms_prop_parm_t`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `krms_prop_parm_t` (
  `PROP_PARM_ID` varchar(40) COLLATE utf8_bin NOT NULL DEFAULT '',
  `PROP_ID` varchar(40) COLLATE utf8_bin NOT NULL,
  `PARM_VAL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `PARM_TYP_CD` varchar(1) COLLATE utf8_bin NOT NULL,
  `SEQ_NO` decimal(5,0) NOT NULL,
  `VER_NBR` decimal(8,0) NOT NULL DEFAULT '0',
  PRIMARY KEY (`PROP_PARM_ID`),
  KEY `KRMS_PROP_PARM_TI1` (`PROP_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `krms_prop_parm_t`
--

LOCK TABLES `krms_prop_parm_t` WRITE;
/*!40000 ALTER TABLE `krms_prop_parm_t` DISABLE KEYS */;
INSERT INTO `krms_prop_parm_t` VALUES ('10000','10000','10000','T',1,1),('10001','10000','true','C',2,1),('10002','10000','=','O',3,1),('10003','10001','10001','T',1,1),('10004','10001','true','C',2,1),('10005','10001','=','O',3,1),('10006','10002','10002','T',1,1),('10007','10002','true','C',2,1),('10008','10002','=','O',3,1),('10009','10003','10003','T',1,1),('10010','10003','true','C',2,1),('10011','10003','=','O',3,1),('10012','10004','10004','T',1,1),('10013','10004','true','C',2,1),('10014','10004','=','O',3,1),('10015','10005','10005','T',1,1),('10016','10005','true','C',2,1),('10017','10005','=','O',3,1),('10018','10007','10006','T',1,1),('10019','10007','true','C',2,1),('10020','10007','=','O',3,1),('10021','10008','10007','T',1,1),('10022','10008','true','C',2,1),('10023','10008','=','O',3,1),('10024','10010','10008','T',1,1),('10025','10010','true','C',2,1),('10026','10010','=','O',3,1),('10027','10011','10009','T',1,1),('10028','10011','true','C',2,1),('10029','10011','=','O',3,1),('10030','10012','10010','T',1,1),('10031','10012','true','C',2,1),('10032','10012','=','O',3,1),('10033','10014','10011','T',1,1),('10034','10014','true','C',2,1),('10035','10014','=','O',3,1),('10036','10015','10012','T',1,1),('10037','10015','1','C',2,1),('10038','10015','=','O',3,1),('10039','10017','10013','T',1,1),('10040','10017','1','C',2,1),('10041','10017','=','O',3,1),('10042','10018','10014','T',1,1),('10043','10018','true','C',2,1),('10044','10018','=','O',3,1),('10045','10019','10015','T',1,1),('10046','10019','true','C',2,1),('10047','10019','=','O',3,1),('10048','10020','10016','T',1,1),('10049','10020','true','C',2,1),('10050','10020','=','O',3,1),('10051','10022','10017','T',1,1),('10052','10022','1','C',2,1),('10053','10022','=','O',3,1),('10054','10023','10018','T',1,1),('10055','10023','true','C',2,1),('10056','10023','=','O',3,1),('10057','10024','10019','T',1,1),('10058','10024','true','C',2,1),('10059','10024','=','O',3,1),('10060','10026','10020','T',1,1),('10061','10026','true','C',2,1),('10062','10026','=','O',3,1),('10063','10027','10021','T',1,1),('10064','10027','true','C',2,1),('10065','10027','=','O',3,1),('10066','10029','10022','T',1,1),('10067','10029','true','C',2,1),('10068','10029','=','O',3,1),('10069','10031','10023','T',1,1),('10070','10031','true','C',2,1),('10071','10031','=','O',3,1),('10072','10032','10024','T',1,1),('10073','10032','true','C',2,1),('10074','10032','=','O',3,1),('10075','10033','10025','T',1,1),('10076','10033','true','C',2,1),('10077','10033','=','O',3,1),('10078','10034','10026','T',1,1),('10079','10034','true','C',2,1),('10080','10034','=','O',3,1),('10081','10035','10027','T',1,1),('10082','10035','true','C',2,1),('10083','10035','=','O',3,1),('10084','10037','10028','T',1,1),('10085','10037','true','C',2,1),('10086','10037','=','O',3,1),('10087','10038','10029','T',1,1),('10088','10038','1','C',2,1),('10089','10038','=','O',3,1),('10090','10039','10030','T',1,1),('10091','10039','true','C',2,1),('10092','10039','=','O',3,1),('10093','10040','10031','T',1,1),('10094','10040','true','C',2,1),('10095','10040','=','O',3,1),('10096','10041','10032','T',1,1),('10097','10041','true','C',2,1),('10098','10041','=','O',3,1),('10099','10042','10033','T',1,1),('10100','10042','true','C',2,1),('10101','10042','=','O',3,1),('10102','10043','10034','T',1,1),('10103','10043','true','C',2,1),('10104','10043','=','O',3,1),('10105','10044','10035','T',1,1),('10106','10044','true','C',2,1),('10107','10044','=','O',3,1),('10108','10045','10036','T',1,1),('10109','10045','true','C',2,1),('10110','10045','=','O',3,1),('10111','10046','10037','T',1,1),('10112','10046','true','C',2,1),('10113','10046','=','O',3,1),('10114','10047','10038','T',1,1),('10115','10047','true','C',2,1),('10116','10047','=','O',3,1),('10117','10048','10039','T',1,1),('10118','10048','true','C',2,1),('10119','10048','=','O',3,1),('10120','10049','10040','T',1,1),('10121','10049','true','C',2,1),('10122','10049','=','O',3,1),('10123','10050','10041','T',1,1),('10124','10050','true','C',2,1),('10125','10050','=','O',3,1),('10126','10051','10042','T',1,1),('10127','10051','true','C',2,1),('10128','10051','=','O',3,1),('10129','10052','10043','T',1,1),('10130','10052','true','C',2,1),('10131','10052','=','O',3,1),('10132','10054','10044','T',1,1),('10133','10054','1','C',2,1),('10134','10054','=','O',3,1),('10135','10055','10045','T',1,1),('10136','10055','true','C',2,1),('10137','10055','=','O',3,1),('10138','10056','10046','T',1,1),('10139','10056','1','C',2,1),('10140','10056','=','O',3,1),('10141','10057','10047','T',1,1),('10142','10057','true','C',2,1),('10143','10057','=','O',3,1),('10144','10059','10048','T',1,1),('10145','10059','true','C',2,1),('10146','10059','=','O',3,1),('10147','10060','10049','T',1,1),('10148','10060','true','C',2,1),('10149','10060','=','O',3,1),('10150','10062','10050','T',1,1),('10151','10062','true','C',2,1),('10152','10062','=','O',3,1),('10153','10063','10051','T',1,1),('10154','10063','true','C',2,1),('10155','10063','=','O',3,1),('10156','10065','10052','T',1,1),('10157','10065','true','C',2,1),('10158','10065','=','O',3,1),('10159','10066','10053','T',1,1),('10160','10066','true','C',2,1),('10161','10066','=','O',3,1),('10162','10068','10054','T',1,1),('10163','10068','true','C',2,1),('10164','10068','=','O',3,1),('10165','10069','10055','T',1,1),('10166','10069','true','C',2,1),('10167','10069','=','O',3,1),('10168','10070','10056','T',1,1),('10169','10070','true','C',2,1),('10170','10070','=','O',3,1),('10171','10071','10057','T',1,1),('10172','10071','true','C',2,1),('10173','10071','=','O',3,1),('10174','10073','10058','T',1,1),('10175','10073','1','C',2,1),('10176','10073','=','O',3,1),('10177','10074','10059','T',1,1),('10178','10074','true','C',2,1),('10179','10074','=','O',3,1),('10180','10076','10060','T',1,1),('10181','10076','true','C',2,1),('10182','10076','=','O',3,1),('10183','10077','10061','T',1,1),('10184','10077','1','C',2,1),('10185','10077','=','O',3,1),('10186','10078','10062','T',1,1),('10187','10078','1','C',2,1),('10188','10078','=','O',3,1),('10189','10079','10063','T',1,1),('10190','10079','true','C',2,1),('10191','10079','=','O',3,1),('10192','10080','10064','T',1,1),('10193','10080','true','C',2,1),('10194','10080','=','O',3,1),('10195','10081','10065','T',1,1),('10196','10081','true','C',2,1),('10197','10081','=','O',3,1),('10198','10083','10066','T',1,1),('10199','10083','1','C',2,1),('10200','10083','=','O',3,1),('10201','10084','10067','T',1,1),('10202','10084','true','C',2,1),('10203','10084','=','O',3,1),('10204','10085','10068','T',1,1),('10205','10085','true','C',2,1),('10206','10085','=','O',3,1),('10207','10086','10069','T',1,1),('10208','10086','true','C',2,1),('10209','10086','=','O',3,1),('10210','10087','10070','T',1,1),('10211','10087','true','C',2,1),('10212','10087','=','O',3,1),('10213','10088','10071','T',1,1),('10214','10088','true','C',2,1),('10215','10088','=','O',3,1),('10216','10089','10072','T',1,1),('10217','10089','true','C',2,1),('10218','10089','=','O',3,1),('10219','10091','10073','T',1,1),('10220','10091','1','C',2,1),('10221','10091','=','O',3,1),('10222','10092','10074','T',1,1),('10223','10092','true','C',2,1),('10224','10092','=','O',3,1),('10225','10093','10075','T',1,1),('10226','10093','true','C',2,1),('10227','10093','=','O',3,1),('10228','10095','10076','T',1,1),('10229','10095','true','C',2,1),('10230','10095','=','O',3,1);
/*!40000 ALTER TABLE `krms_prop_parm_t` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2013-02-03 11:53:45
