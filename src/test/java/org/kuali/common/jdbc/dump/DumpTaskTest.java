package org.kuali.common.jdbc.dump;

import java.io.File;
import java.util.Arrays;
import java.util.Properties;

import org.apache.tools.ant.Project;
import org.junit.Test;
import org.kuali.common.util.FormatUtils;
import org.kuali.core.db.torque.KualiTorqueSchemaDumpTask;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class DumpTaskTest {

	private static final Logger logger = LoggerFactory.getLogger(DumpTaskTest.class);

	@Test
	public void test() {
		try {
			Properties p = new Properties();
			p.setProperty("project.basedir", System.getProperty("user.home") + "/ws/kuali-jdbc-2.0");
			p.setProperty("project.build.directory", p.getProperty("project.basedir") + "/target");

			File schemaXmlFile = new File(p.getProperty("project.build.directory") + "/schema.xml");
			String db = "KS_SOURCE_DB_SPRING";
			String driver = "oracle.jdbc.driver.OracleDriver";
			String url = "jdbc:oracle:thin:@oracle.ks.kuali.org:1521:ORACLE";
			String artifactId = "ks-rice-db";
			String vendor = "oracle";
			String include = "KRCR_CMPNT.*";
			String comment = "Generated by the spring-maven-plugin - http://site.kuali.org/maven/plugins/spring-maven-plugin/latest/plugin-info.html";

			long start = System.currentTimeMillis();
			Project project = getInitializedAntProject();
			KualiTorqueSchemaDumpTask task = new KualiTorqueSchemaDumpTask();
			task.setProject(project);
			task.setTargetDatabase(vendor);
			task.setArtifactId(artifactId);
			task.setSchema(db);
			task.setSchemaXMLFile(schemaXmlFile);
			task.setDriver(driver);
			task.setUrl(url);
			task.setUsername(db);
			task.setPassword(db);
			task.setComment(comment);
			task.setProcessTables(true);
			task.setProcessSequences(true);
			task.setProcessViews(true);
			task.setIncludePatterns(Arrays.asList(include));
			task.execute();
			String time = FormatUtils.getTime(System.currentTimeMillis() - start);
			logger.info("Total time: {}", time);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	protected Project getInitializedAntProject() {
		Project antProject = new Project();
		antProject.init();
		return antProject;
	}

}
