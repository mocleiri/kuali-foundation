deploy.env.name=env${deploy.env}
public.url=http://${dns.hostname}
http.url=${public.url}

kdo.channel.username=root
kdo.channel.hostname=${dns.hostname}
kdo.channel.strictHostKeyChecking=false
kdo.channel.useConfigFile=false
kdo.channel.includeDefaultPrivateKeyLocations=false
kdo.channel.privateKey=${project.privateKey}

# Default location for rice.keystore
keystore.file.default=/home/tomcat/.ssh/rice.keystore

jdbc.pool.size.max=20

tomcat.base=/usr/local/tomcat

tomcat.conf=${tomcat.base}/conf
tomcat.logs=${tomcat.base}/logs
tomcat.bin=${tomcat.base}/bin
tomcat.lib=${tomcat.base}/lib
tomcat.webapps=${tomcat.base}/webapps
tomcat.work=${tomcat.base}/work

tomcat.root.war=${tomcat.webapps}/ROOT.war
tomcat.server.xml=${tomcat.conf}/server.xml
tomcat.web.xml=${tomcat.conf}/web.xml
tomcat.conf.catalina=${tomcat.conf}/Catalina
tomcat.jsp.env=${tomcat.logs}/env.jsp
tomcat.jsp.tail=${tomcat.logs}/tail.jsp
tomcat.jsp.env.local=classpath:org/kuali/common/deploy/jsp/env.jsp
tomcat.jsp.tail.local=classpath:org/kuali/common/deploy/jsp/tail.jsp

tomcat.setenv=${tomcat.bin}/setenv.sh
tomcat.setenv.perms=755
tomcat.setenv.local=classpath:org/kuali/common/deploy/bin/setenv.sh
tomcat.startup=${tomcat.bin}/startup.sh
tomcat.cleanup=${tomcat.bin}/cleanup.sh
tomcat.shutdown=${tomcat.bin}/forced-shutdown.sh

tomcat.home=/home/tomcat
tomcat.home.org=${tomcat.home}/.${project.orgId.code}
tomcat.home.org.alt=${tomcat.home}/${project.orgId.code}
tomcat.user=tomcat
tomcat.owner=${tomcat.user}
tomcat.group=${tomcat.user}

# Tomcat setenv.sh content
setenv.kuali.content=\# Inject kuali wide setup here
setenv.group.content=\# Inject project wide setup here
setenv.app.content=\# Inject app setup here
setenv.version.content=\# Inject version setup here
setenv.env.content=\# Inject environment setup here

# DNS props
dns.domain=kuali.org
dns.prefix=${deploy.env.name}
dns.subdomain=${project.groupId.code}
dns.hostname=${dns.prefix}.${dns.subdomain}.${dns.domain}
dnsme.ttl=60
dnsme.recordName=${dns.prefix}.${dns.subdomain}
dnsme.domainName=${dns.domain}
dnsme.recordType=CNAME
dnsme.apiKey=454f2836-81c0-4379-b8dd-2cc6495131b5
dnsme.secretKey=ENC(/Fxj5aXSbOe3AWJ5mAg1M8Lo03+ytqybZuYq3CwUWaZwBnqxEPzpR+/8n19MeRBX)

# EC2 props
ec2.ami=ami-71289918
ec2.securityGroup=deployment
ec2.type=m1.medium

# S3 props
s3.accessKey=AKIAJFD5IM7IPVVUEBNA
s3.secretKey=ENC(uXNCzc6efcKz1zvp4t5Fj4wyR9oGw2GZ2VOB3SXZaoXaV1BA1Gao2d2vWXnjqUA1oKzg+0s9NAM=)

# Simple Email Service props
# SES is run from the Kuali Rice account
ses.host=email-smtp.us-east-1.amazonaws.com
ses.username=AKIAJJUBCVBNS3N2K5WA
ses.password=ENC(go4R34dRBQrg1A52oqXoUlorHf6KzIz0amn7OelOd11fAVR2aoSE+VBHGndP7ST7RzlGXxLANHA=)
ses.debug=false
ses.port=465
ses.ssl.enable=true
ses.auth=true

# Overall application startup timeout
http.timeout=30m
# Individual request timeout
http.requestTimeout=15s

# Appdynamics props
appdynamics.nodeName=${dns.hostname}
appdynamics.applicationName=${project.artifactId}-${project.version.major}.${project.version.minor}
appdynamics.controllerPort=80
appdynamics.sslEnabled=false
appdynamics.tierName=web-applications
appdynamics.enableOrchestration=false
appdynamics.forceAgentRegistration=false
# Intentionally blank by default
appdynamics.agentRuntimeDir=

# Foundation account for AppDynamics SaaS
appdynamics.controllerHost=kfmd.saas.appdynamics.com
appdynamics.accountName=kfmd
appdynamics.accountAccessKey=ENC(I7wfIFh/PlqgPbm8IgNePAbx0ISwkAVp)

# Server Agent
appdynamics.sa.base=/usr/local/server-agent
appdynamics.sa.conf=${appdynamics.sa.base}/conf
appdynamics.sa.controller=${appdynamics.sa.conf}/controller-info.xml
appdynamics.sa.controller.local=classpath:org/kuali/common/deploy/appdynamics/server-agent.xml

# Tomcat Startup Options for AppDynamics server agent
appdynamics.tomcat.java.options=JAVA_OPTS="$JAVA_OPTS -javaagent:${appdynamics.sa.base}/javaagent.jar"\n\
JAVA_OPTS="$JAVA_OPTS -Dappdynamics.agent.uniqueHostId=${dns.hostname}"\n\
JAVA_OPTS="$JAVA_OPTS -Dappdynamics.agent.logs.dir=/usr/local/tomcat/logs/appdynamics"\n\
export JAVA_OPTS

# Machine Agent
appdynamics.ma.base=/usr/local/machine-agent
appdynamics.ma.conf=${appdynamics.ma.base}/conf
appdynamics.ma.controller=${appdynamics.ma.conf}/controller-info.xml
appdynamics.ma.controller.local=classpath:org/kuali/common/deploy/appdynamics/machine-agent.xml
appdynamics.ma.jar=${appdynamics.ma.base}/machineagent.jar
appdynamics.ma.tmp=${appdynamics.ma.base}/tmp
appdynamics.ma.logs=${appdynamics.ma.base}/logs
appdynamics.ma.cmd=java -jar ${appdynamics.ma.jar}


