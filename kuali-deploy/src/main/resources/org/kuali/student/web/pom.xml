<?xml version="1.0" encoding="UTF-8"?>
<!--

  Copyright 2005-2012 The Kuali Foundation

  Licensed under the Educational Community License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.opensource.org/licenses/ecl2.php

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>${parent.groupId}</groupId>
    <artifactId>${parent.artifactId}</artifactId>
    <version>${parent.version}</version>
  </parent>
  <groupId>${project.groupId}</groupId>
  <artifactId>kuali-deployer</artifactId>
  <version>${project.version}</version>
  <name>KS Deployer</name>
  <description>This pom contains plugin executions for deploying a KS application to EC2</description>
  <properties>
    <maven.test.skip>true</maven.test.skip>
    <parent.groupId>${project.parent.groupId}</parent.groupId>
    <parent.artifactId>${project.parent.artifactId}</parent.artifactId>
    <parent.version>${project.parent.version}</parent.version>

    <!-- Plugins -->
    <plugin.ant.version>1.0.10</plugin.ant.version>
    <plugin.dependency.version>2.4</plugin.dependency.version>
    <plugin.impex.version>1.0.30</plugin.impex.version>
    <plugin.mvn.version>1.0.3</plugin.mvn.version>
    <plugin.properties.version>1.1.8</plugin.properties.version>
    <plugin.resources.version>2.5</plugin.resources.version>
    <plugin.sql.version>1.0.12</plugin.sql.version>
    <plugin.http.version>1.0.5</plugin.http.version>

    <!-- Jars -->
    <kuali-sql.version>1.1.0</kuali-sql.version>
    <kuali-mvn.version>1.0.1</kuali-mvn.version>
    <ant-jsch.version>1.8.2</ant-jsch.version>
    <properties.original>${project.build.directory}/properties/original.properties</properties.original>
    <properties.all>${project.build.directory}/properties/all.properties</properties.all>
  </properties>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.kuali.maven.plugins</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>${plugin.properties.version}</version>
          <executions>
            <execution>
              <id>write</id>
              <phase>validate</phase>
              <goals>
                <goal>write-project-properties</goal>
              </goals>
              <configuration>
                <includeSystemProperties>true</includeSystemProperties>
                <outputFile>${properties.original}</outputFile>
              </configuration>
            </execution>
            <execution>
              <id>read</id>
              <phase>initialize</phase>
              <goals>
                <goal>read-project-properties</goal>
              </goals>
              <configuration>
                <locations>
                  <param>${properties.all}</param>
                </locations>
              </configuration>
            </execution>
            <execution>
              <id>decrypt</id>
              <phase>initialize</phase>
              <goals>
                <goal>decryptall</goal>
              </goals>
              <configuration>
                <quiet>true</quiet>
                <password>${kuali.enc.password}</password>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.kuali.maven.plugins</groupId>
          <artifactId>mvn-maven-plugin</artifactId>
          <version>${plugin.mvn.version}</version>
          <configuration>
            <basedir>${project.basedir}</basedir>
            <filterPom>true</filterPom>
          </configuration>
          <executions>
            <execution>
              <id>validate</id>
              <phase>validate</phase>
              <goals>
                <goal>mvn</goal>
              </goals>
              <configuration>
                <args>
                  <arg>initialize</arg>
                </args>
                <poms>
                  <param>classpath:org/kuali/common/deploy/mvn/enforcer.xml</param>
                  <param>classpath:org/kuali/common/deploy/mvn/properties.xml</param>
                </poms>
              </configuration>
            </execution>
            <execution>
              <id>reset</id>
              <phase>initialize</phase>
              <goals>
                <goal>mvn</goal>
              </goals>
              <configuration>
                <args>
                  <arg>initialize</arg>
                  <arg>-Ddeploy.ant.target=deploy</arg>
                </args>
                <poms>
                  <param>classpath:org/kuali/common/deploy/mvn/dependencies.xml</param>
                  <param>classpath:org/kuali/common/deploy/mvn/resources.xml</param>
                  <param>classpath:org/kuali/common/deploy/mvn/ant.xml</param>
                  <param>classpath:org/kuali/common/deploy/mvn/executesql.xml</param>
                </poms>
              </configuration>
            </execution>
            <execution>
              <id>start</id>
              <phase>initialize</phase>
              <goals>
                <goal>mvn</goal>
              </goals>
              <configuration>
                <args>
                  <arg>initialize</arg>
                  <arg>-Ddeploy.ant.target=start</arg>
                </args>
                <poms>
                  <param>classpath:org/kuali/common/deploy/mvn/ant.xml</param>
                  <param>classpath:org/kuali/common/deploy/mvn/http.xml</param>
                </poms>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <version>${project.version}</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.kuali.maven.plugins</groupId>
        <artifactId>properties-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.kuali.maven.plugins</groupId>
        <artifactId>mvn-maven-plugin</artifactId>
      </plugin>
      <!--
        The actual order of the plugin executions is
        1 - properties:write
        2 - mvn:validate
        3 - properties:read
        4 - properties:decrypt
        5 - mvn:reset
        6 - mvn:start
      -->
    </plugins>
  </build>
</project>