<!--

  Copyright 2011-2013 The Kuali Foundation

  Licensed under the Educational Community License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.opensource.org/licenses/ecl2.php

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.kuali.pom</groupId>
    <artifactId>kuali-maven</artifactId>
    <version>2.3.23</version>
  </parent>
  <groupId>org.kuali.maven.plugins</groupId>
  <artifactId>spring-maven-plugin</artifactId>
  <version>2.0.10-SNAPSHOT</version>
  <packaging>maven-plugin</packaging>
  <name>Spring Maven Plugin</name>
  <description>
    This plugin provides integration between Spring and Maven.  
    Plugin goals support loading an arbitrary Spring context XML file as part of the Maven build lifecycle.  
    The XML file can be on the local file system or be accessible via any URL Spring's resource loading mechanism can understand.  
    Spring's "classpath:context.xml" style notation is supported.   
    From version 2.0.0 on, annotated Java classes can also be used to load a Spring context.
    The full set of Maven properties are injected into the Spring context (both XML and annotation style) as a bean named "mavenProperties".  
    Maven properties are also registered as a top level PropertySource so that Spring's placeholder resolution framework automatically considers them.   
    See Project Reports -&gt; Plugin Documentation for details on plugin goals.
  </description>
  <inceptionYear>2011</inceptionYear>
  <url>http://${kuali.site.hostname}/maven/plugins/${project.artifactId}/${project.version}</url>
  <developers>
    <developer>
      <id>jcaddel</id>
      <name>Jeff Caddel</name>
      <organization>rSmart</organization>
      <timezone>-7</timezone>
      <email>jcaddel@kuali.org</email>
    </developer>
  </developers>
  <properties>
    <parent.version>${project.parent.version}</parent.version>
  </properties>
  <scm>
    <connection>scm:svn:https://svn.kuali.org/repos/foundation/trunk/spring-maven-plugin</connection>
    <developerConnection>scm:svn:https://svn.kuali.org/repos/foundation/trunk/spring-maven-plugin</developerConnection>
    <url>https://svn.kuali.org/repos/foundation/trunk/spring-maven-plugin</url>
  </scm>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <configuration>
          <!-- see http://jira.codehaus.org/browse/MNG-5346 -->
          <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
        </configuration>
        <executions>
          <execution>
            <id>mojo-descriptor</id>
            <goals>
              <goal>descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>pom*.xml</include>
        </includes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>pom*.xml</exclude>
        </excludes>
      </testResource>
    </testResources>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kuali.common</groupId>
      <artifactId>kuali-util</artifactId>
    </dependency>
  </dependencies>
</project>
