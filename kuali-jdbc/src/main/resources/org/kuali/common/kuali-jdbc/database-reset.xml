<?xml version="1.0" encoding="UTF-8"?>
<!--

  Copyright 2010-2013 The Kuali Foundation

  Licensed under the Educational Community License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.opensource.org/licenses/ecl2.php

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<!-- Using this context requires the following parameters be set in the maven properties:
  sql.convert.vendor: the database vendor. Only "oracle" and "mysql" are supported.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

  <!--
    This context contains an executable that drops and then re-creates a database from scratch.

    It only runs if the property "project.db.reset=true" is located in ${project.home}/runonce.properties
    If that properties file does not exist, or the required property is not present in that properties file, nothing happens.
    If the property is present but is set to any value besides "true", nothing happens.
    Once the property "project.db.reset=true" is located in runonce.properties, the first thing that happens is the property is
    changed from "true" to "INPROGRESS" and then stored back to the properties file.
    After runonce.properties has been successfully updated, the database reset process begins.
    This sequence of events prevents the database reset process from accidentally running more than once.

    The property ${project.home} must be set and point to a writable directory on the local file system
    The property ${project.db.reset.class} must be set and point to a Spring annotated java configuration class capable of resetting the database
  -->

  <bean class="org.kuali.common.util.execute.RunOnceExecutable" init-method="execute">
    <property name="propertiesFile" value="${project.home}/runonce.properties" />
    <property name="encoding" value="UTF-8" />
    <property name="property" value="project.db.reset" />
    <property name="skip" value="${project.db.reset.skip:false}" />
    <property name="executable">
      <bean class="org.kuali.common.util.execute.SpringExecutable">
        <property name="context">
          <bean class="org.kuali.common.util.service.SpringContext">
            <property name="propertySourceContext">
              <bean class="org.kuali.common.util.service.PropertySourceContext">
                <property name="removeExistingSources" value="true" />
                <property name="sources">
                  <bean class="org.kuali.common.util.spring.EnvironmentPropertySourceFactoryBean">
                    <property name="env" ref="environment" />
                    <property name="quietly" value="true" />
                  </bean>
                </property>
              </bean>
            </property>
            <property name="annotatedClasses">
              <bean class="org.kuali.common.util.spring.GetClassFactoryBean">
                <property name="className" value="${project.db.reset.class}" />
              </bean>
            </property>
          </bean>
        </property>
      </bean>
    </property>
  </bean>

</beans>