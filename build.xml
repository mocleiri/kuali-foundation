<?xml version="1.0"?>
<project name="kul-cfg-envs" default="init-properties" basedir=".">
	
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	
	<target name="init-base-properties">
		<property file="${generated.properties.file}" />
		<property file="${application.working.directory}/build.properties" />
		<property file="${working.directory}/build.properties" />
		<property file="${application.deploy.directory}/build.properties" />
		<condition property="import.into.mysql">
			<equals arg1="${datasource.ojb.platform}" arg2="MySQL" />
		</condition>
		<property name="maven.build.properties" value="build.properties" />
	</target>
	
	<target name="init-mysql-properties" depends="init-base-properties" if="import.into.mysql">
		<property file="${mysql.impex.properties.file}" />
	</target>

	<target name="init-properties" depends="init-mysql-properties">
		<property file="${oracle.impex.properties.file}" />
		<loadfile property="impex-build.properties" srcfile="${impex.properties.file.template}"><filterchain><expandproperties /></filterchain></loadfile>
		<delete file="${impex.properties.file}" />
		<echo message="${impex-build.properties}" file="${impex.properties.file}" />
	</target>
	
	<target name="export" depends="init-properties">
		<delete>
			<fileset dir="${database.project}" includes="${export.generated.files}" />
		</delete>
		<ant antfile="${impex.build.file}" target="export" inheritall="false">
			<property name="impex.properties.file" value="${impex.properties.file}"/>
		</ant>
		<delete file="${log.file}" />
	</target>
	
	<target name="create-mysql-user" depends="init-properties" if="import.into.mysql">
		<ant antfile="${impex.build.file}" target="create-user" inheritall="false">
			<property name="impex.properties.file" value="${impex.properties.file}"/>
		</ant>
	</target>
	
	<target name="import" depends="create-mysql-user">
		<ant antfile="${impex.build.file}" target="empty-schema" inheritall="false">
			<property name="impex.properties.file" value="${impex.properties.file}"/>
		</ant>
		<ant antfile="${impex.build.file}" target="import" inheritall="false">
			<property name="impex.properties.file" value="${impex.properties.file}"/>
		</ant>
		<delete file="${log.file}" />
	</target>
	
	<target name="dist-external" if="dist.external" depends="init-properties">
		<ant dir="${application.deploy.directory}/${application.java.project}" target="dist-external" />
	</target>

	<target name="dist-ant" unless="maven.build">
        <ant dir="${application.deploy.directory}/${application.java.project}" target="dist" />
        <copy file="${application.deploy.directory}/${application.java.project}/${application}-${build.environment}.war" tofile="${application.deploy.directory}/${application}-${build.environment}.war" overwrite="true" />
    </target>

    <target name="dist-maven" if="maven.build">
       <maven goals="package" />
       <copy file="${application.deploy.directory}/${application.java.project}/target/${maven.war.filename}" tofile="${application.deploy.directory}/${application}-${build.environment}.war" overwrite="true" verbose="true" />
    </target>

    <target name="dist-war" depends="init-properties,dist-ant,dist-maven" />

	<target name="check-modularization" depends="init-properties">
		<trycatch property="has.error">
			<try><ant dir="${application.working.directory}/${application.java.project}" target="check-modularization" /></try>
			<finally>
				<fail if="has.error" />
			</finally>
		</trycatch>
	</target>
	
	<macrodef name="maven">
        <attribute name="goals" />
        <sequential>
            <java classname="org.codehaus.classworlds.Launcher" dir="${application.deploy.directory}/${application.java.project}" fork="true" >
	    	<arg line="-Dbuild.properties=${maven.build.properties} -Denvironment=${build.environment} -Dalt.build.location=${alt.build.location} -Dmaven.test.skip=true -Dbuild.version=${build.version} -Dwar=true @{goals}"/>
        		<sysproperty key="classworlds.conf" value="${maven.home.directory}/bin/m2.conf"/>
        		<sysproperty key="maven.home" value="${maven.home.directory}"/>
            	<sysproperty key="maven.test.skip" value="true"/>
            	<classpath>
            		<fileset dir="${maven.home.directory}/boot">
						<include name="classworlds-*.jar"/>
					</fileset>
            	</classpath>
            </java>
        </sequential>
    </macrodef>
</project>
