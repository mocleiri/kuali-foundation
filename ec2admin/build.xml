<project name="Tomcat Instance Manager">
  <description>Manage the creating/removing of Tomcat instances on an ec2 deployment server</description>
  <taskdef resource="net/sf/antcontrib/antcontrib.properties" />

  <property name="environment" value="ec2" />

  <target name="resetall">
    <antcall target="removeall" />
    <antcall target="createall" />
  </target>

  <target name="removeall">
    <antcall target="remove">
      <param name="instance" value="1" />
    </antcall>
    <antcall target="remove">
      <param name="instance" value="2" />
    </antcall>
    <antcall target="remove">
      <param name="instance" value="3" />
    </antcall>
  </target>

  <target name="createall">
    <antcall target="create">
      <param name="instance" value="1" />
    </antcall>
    <antcall target="create">
      <param name="instance" value="2" />
    </antcall>
    <antcall target="create">
      <param name="instance" value="3" />
    </antcall>
  </target>

  <target name="create" depends="init">
    <property name="tomcat.user" value="tomcat${instance}" />
    <property name="catalina.home" location="/usr/local/tomcat" />
    <property name="catalina.base" value="/usr/local/tomcat${instance}" />
    <exec executable="useradd">
      <arg value="-g" />
      <arg value="tomcat" />
      <arg value="${tomcat.user}" />
    </exec>
    <copy file="src/main/resources/.bashrc" tofile="/home/${tomcat.user}/.bashrc" overwrite="true">
      <filterset begintoken="${" endtoken="}">
        <filter token="environment" value="${environment}" />
      </filterset>
    </copy>
    <copy file="src/main/resources/rice.keystore" tofile="/home/${tomcat.user}/kuali/main/${environment}/rice.keystore"
      overwrite="true" />
    <mkdir dir="${catalina.base}" />
    <mkdir dir="${catalina.base}/lib" />
    <mkdir dir="${catalina.base}/logs" />
    <mkdir dir="${catalina.base}/temp" />
    <mkdir dir="${catalina.base}/webapps" />
    <copy todir="${catalina.base}/conf">
      <fileset dir="${catalina.home}/conf" />
    </copy>
    <copy todir="${catalina.base}/logs">
      <fileset dir="src/main/resources/apache-tomcat/jsps" />
    </copy>
    <copy todir="${catalina.base}/conf" overwrite="true">
      <fileset dir="src/main/resources/apache-tomcat/${tomcat.version}/conf" />
      <filterset begintoken="${" endtoken="}">
        <filter token="tomcat.shutdown.port" value="${tomcat.shutdown.port}" />
        <filter token="tomcat.http.port" value="${tomcat.http.port}" />
        <filter token="tomcat.https.port" value="${tomcat.https.port}" />
        <filter token="catalina.base" value="${catalina.base}" />
      </filterset>
    </copy>
    <exec executable="chown">
      <arg value="-R" />
      <arg value="${tomcat.user}:tomcat" />
      <arg value="${catalina.base}" />
    </exec>
    <exec executable="chown">
      <arg value="-R" />
      <arg value="${tomcat.user}:tomcat" />
      <arg value="/home/${tomcat.user}" />
    </exec>
  </target>

  <target name="installtomcat" depends="tomcatinit">
    <symlink action="delete" link="/usr/local/tomcat" />

    <!-- Remove previous installation of this version (if any) -->
    <delete dir="${tomcat.dir}" />

    <!-- Inflate the zip into /usr/local/apache-tomcat-[version] -->
    <unzip src="${tomcat.zip}" dest="/usr/local" />

    <!-- Delete/recreate the webapps directory to remove the pre-installed apps -->
    <delete dir="${tomcat.dir}/webapps" />
    <mkdir dir="${tomcat.dir}/webapps" />

    <!-- Clean up the bin directory, add some simple shell scripts, and make *.sh executable -->
    <delete>
      <fileset dir="${tomcat.dir}/bin" includes="*.bat" />
    </delete>
    <copy todir="${tomcat.dir}/bin">
      <fileset dir="src/main/resources/apache-tomcat/root/bin" />
    </copy>
    <chmod dir="${tomcat.dir}/bin" perm="755" includes="*.sh" />

    <!-- Copy in our utility JSP's -->
    <copy todir="${tomcat.dir}/logs">
      <fileset dir="src/main/resources/apache-tomcat/jsps" />
    </copy>

    <!-- Copy in our modified versions of server.xml and web.xml -->
    <property name="root.server.xml" value="src/main/resources/apache-tomcat/${tomcat.version}/root/conf/server.xml" />
    <property name="root.web.xml" value="src/main/resources/apache-tomcat/${tomcat.version}/conf/web.xml" />

    <copy file="${root.server.xml}" tofile="${tomcat.dir}/conf/server.xml" overwrite="true" />
    <copy file="${root.web.xml}" tofile="${tomcat.dir}/conf/web.xml" overwrite="true" />

    <!-- Final step is to symlink /usr/local/tomcat to the versioned tomcat directory -->
    <symlink link="/usr/local/tomcat" resource="${tomcat.dir}" />
  </target>

  <target name="remove" depends="init">
    <property name="tomcat.user" value="tomcat${instance}" />
    <property name="catalina.base" value="/usr/local/tomcat${instance}" />
    <exec executable="userdel">
      <arg value="-rf" />
      <arg value="${tomcat.user}" />
    </exec>
    <delete dir="${catalina.base}" />
  </target>

  <target name="tomcatinit">
    <condition property="tomcat.set">
      <and>
        <isset property="tomcat.zip" />
        <isset property="tomcat.dir" />
        <isset property="tomcat.version" />
      </and>
    </condition>
    <fail unless="tomcat.set">
      Must specify tomcat.dir, tomcat.zip, and tomcat.version
    </fail>
  </target>

  <target name="init">
    <condition property="instance.set">
      <and>
        <isset property="instance" />
      </and>
    </condition>
    <fail unless="instance.set">
      Must specify an instance eg:
      ant create -Dinstance=1
      ant remove -Dinstance=1
    </fail>
    <if>
      <equals arg1="${instance}" arg2="1" />
      <then>
        <property name="tomcat.shutdown.port" value="8006" />
        <property name="tomcat.http.port" value="8081" />
        <property name="tomcat.https.port" value="8444" />
      </then>
      <elseif>
        <equals arg1="${instance}" arg2="2" />
        <then>
          <property name="tomcat.shutdown.port" value="8007" />
          <property name="tomcat.http.port" value="8082" />
          <property name="tomcat.https.port" value="8445" />
        </then>
      </elseif>
      <elseif>
        <equals arg1="${instance}" arg2="3" />
        <then>
          <property name="tomcat.shutdown.port" value="8008" />
          <property name="tomcat.http.port" value="8083" />
          <property name="tomcat.https.port" value="8446" />
        </then>
      </elseif>
      <else>
        <fail>
          Instance must be 1, 2, or 3
        </fail>
      </else>
    </if>
  </target>

</project>